using Content.Client.UserInterface.Controls;
using Content.Shared.Administration.ParrotMemories;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Administration.UI.ParrotMemories;

[GenerateTypedNameReferences]
public sealed partial class ParrotMemoryWindow : FancyWindow
{
    public ParrotMemoryWindow()
    {
        RobustXamlLoader.Load(this);
    }

    public ParrotMemoryList? GetActiveList()
    {
        var currentActiveTab = MemoryTabContainer.CurrentTab;
        var currentActiveChild = MemoryTabContainer.GetChild(currentActiveTab);

        if (currentActiveChild is not ParrotMemoryList { } parrotMemoryList)
            return null;

        return parrotMemoryList;
    }

    public void MarkInactiveListsDirty()
    {
        for (var i = 0; i < MemoryTabContainer.ChildCount; i++)
        {
            if (i == MemoryTabContainer.CurrentTab)
                continue;

            var child = MemoryTabContainer.GetChild(i);
            if (child is not ParrotMemoryList { } parrotMessageList)
                continue;

            parrotMessageList.Dirty = true;
        }
    }
}
