using System.Numerics;
using Content.Shared.Explosion;
using JetBrains.Annotations;
using Robust.Client.AutoGenerated;
using Robust.Client.Console;
using Robust.Client.GameObjects;
using Robust.Client.Player;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Map;
using Robust.Shared.Prototypes;
using static Robust.Client.UserInterface.Controls.BaseButton;
using static Robust.Client.UserInterface.Controls.OptionButton;

namespace Content.Client.BlueArtilery.UI;

[Robust.Client.AutoGenerated.GenerateTypedNameReferences]
public partial class BluespaceArtileryConsoleWindow : FancyWindow
{
    [Dependency] private readonly IClientConsoleHost _conHost = default!;
    [Dependency] private readonly IMapManager _mapManager = default!;
    private List<MapId> _mapData = new();
    public BluespaceArtileryConsoleWindow()
    {
        Robust.Client.UserInterface.XAML.RobustXamlLoader.Load(this);
        MapOptions.OnItemSelected += MapSelected;
        MapX.OnValueChanged += (_) => UpdatePreview();
        MapY.OnValueChanged += (_) => UpdatePreview();
        FireBSA.OnPressed += SubmitButtonOnOnPressed;
    }

    private void UpdatePreview()
    {
        MapCoordinates coords = new(new Vector2(MapX.Value, MapY.Value), _mapData[MapOptions.SelectedId]);
    }
    private void MapSelected(ItemSelectedEventArgs args)
    {
        MapOptions.SelectId(args.Id);
        UpdatePreview();
    }

    private void SubmitButtonOnOnPressed(ButtonEventArgs args)
    {
        var mapId = _mapData[MapOptions.SelectedId];
        var cmd = $"explosion 300 10 150 {MapX.Value} {MapY.Value} {mapId} HardBomb";

        _conHost.ExecuteCommand(cmd);
    }

}
