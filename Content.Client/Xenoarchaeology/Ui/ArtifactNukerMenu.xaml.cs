using Content.Client.UserInterface.Controls;
using Content.Shared.Xenoarchaeology.Equipment.Components;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Xenoarchaeology.Ui;

[GenerateTypedNameReferences]
public sealed partial class ArtifactNukerMenu : FancyWindow
{
    [Dependency] private readonly IEntityManager _ent = default!;
    public Action<string>? IndexChanged;

    public ArtifactNukerMenu()
    {
        RobustXamlLoader.Load(this);

        IoCManager.InjectDependencies(this);

        IndexLineEdit.OnTextChanged += OnIndexChanged;
    }

    /// <summary>
    /// Sets entity that represents hand-held xeno artifact node scanner for which window is opened.
    /// Closes window if <see cref="NodeScannerComponent"/> is not present on entity.
    /// </summary>
    public void SetIndex(EntityUid scannerEntityUid)
    {
        if (!_ent.TryGetComponent<ArtifactNukerComponent>(scannerEntityUid, out var comp))
        {
            Close();
            return;
        }
        if (int.TryParse(IndexLineEdit.Text, out var index))
            comp.Index = index;
    }

    private void OnIndexChanged(LineEdit.LineEditEventArgs obj)
    {
        if (!int.TryParse(obj.Text, out _))
            return;
    }
}
