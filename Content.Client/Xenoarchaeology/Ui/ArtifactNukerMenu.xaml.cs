using Content.Client.UserInterface.Controls;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Xenoarchaeology.Ui;

[GenerateTypedNameReferences]
public sealed partial class ArtifactNukerMenu : FancyWindow
{
    public Action<string>? IndexChanged;
    private string _validIndex;

    public ArtifactNukerMenu()
    {
        RobustXamlLoader.Load(this);

        IoCManager.InjectDependencies(this);

        _validIndex = IndexLineEdit.Text;

        IndexLineEdit.OnTextChanged += OnIndexChanged;
        IndexLineEdit.OnTextEntered += OnIndexEnter;
        IndexLineEdit.OnFocusExit += OnNameFocusExit;
    }

    private void OnIndexChanged(LineEdit.LineEditEventArgs obj)
    {
        if (!int.TryParse(obj.Text, out _) &&
            !string.IsNullOrEmpty(obj.Text))
        {
            obj.Control.Text = _validIndex;
            return;
        }

        _validIndex = obj.Control.Text;
        obj.Control.Text = _validIndex;
    }

    private void OnIndexEnter(LineEdit.LineEditEventArgs obj)
    {
        if (!int.TryParse(obj.Text, out _) ||
            !string.IsNullOrEmpty(obj.Text))
        {
            obj.Control.Text = _validIndex;
            return;
        }

        IndexChanged?.Invoke(_validIndex);
    }

    private void OnNameFocusExit(LineEdit.LineEditEventArgs obj)
    {
        if (!int.TryParse(obj.Text, out _) ||
            !string.IsNullOrEmpty(obj.Text))
        {
            obj.Control.Text = _validIndex;
            return;
        }

        IndexChanged?.Invoke(_validIndex);
    }
}
