using System.Text;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Timing;
using Content.Shared.Forensics;
using Robust.Shared.Prototypes;

namespace Content.Client.Forensics
{
    [GenerateTypedNameReferences]
    public sealed partial class ForensicScannerMenu : DefaultWindow
    {
        [Dependency] private readonly IGameTiming _gameTiming = default!;
        [Dependency] private readonly IPrototypeManager _prototypeManager = default!;

        public ForensicScannerMenu()
        {
            RobustXamlLoader.Load(this);
            IoCManager.InjectDependencies(this);
        }

        public void UpdatePrinterState(bool disabled)
        {
            Print.Disabled = disabled;
        }

        public void UpdateState(ForensicScannerBoundUserInterfaceState msg)
        {
            Diagnostics.Children.Clear();
            EmptyDiagnostics.Visible = true;

            if (string.IsNullOrEmpty(msg.LastScannedName))
            {
                Print.Disabled = true;
                Clear.Disabled = true;
                NameLabel.Text = string.Empty;
                return;
            }

            Print.Disabled = (msg.PrintReadyAt > _gameTiming.CurTime);
            Clear.Disabled = false;

            NameLabel.Text = msg.LastScannedName;

            if (msg.Evidence.Count > 0)
            {
                EmptyDiagnostics.Visible = false;
                foreach (var (protoId, evidence) in msg.Evidence)
                {
                    var proto = _prototypeManager.Index(protoId);
                    Diagnostics.AddChild(new ForensicEvidenceEntry(
                        Loc.GetString(proto.Title),
                        evidence)
                    );
                }
            }

            if (msg.CleaningAgents.Count > 0)
            {
                EmptyDiagnostics.Visible = false;

                Diagnostics.AddChild(new ForensicEvidenceEntry(
                    Loc.GetString($"forensic-scanner-interface-cleaning-agents"),
                    msg.CleaningAgents)
                );
           }
        }
    }
}
