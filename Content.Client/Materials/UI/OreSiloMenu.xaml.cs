using System.Linq;
using Content.Client.UserInterface.Controls;
using Content.Shared.Materials.OreSilo;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Materials.UI;

[GenerateTypedNameReferences]
public sealed partial class OreSiloMenu : FancyWindow
{
    public event Action<NetEntity>? OnClientEntryPressed;

    public OreSiloMenu()
    {
        RobustXamlLoader.Load(this);

        ClientList.OnItemSelected += args =>
        {
            var item = ClientList[args.ItemIndex];
            // a little bit of null suppression makes me feel great! :-)
            OnClientEntryPressed?.Invoke((NetEntity) item.Metadata!);
        };
    }

    public void SetEntity(EntityUid uid)
    {
        Materials.SetOwner(uid);
    }

    public void Update(OreSiloBuiState state)
    {
        ClientList.Clear();
        var orderedClients = state.Clients.OrderBy(t => t.Item3).ThenBy(t => t.Item1.Id);
        foreach (var (ent, text, _) in orderedClients)
        {
            ClientList.AddItem(text, metadata: ent);
        }
    }
}

