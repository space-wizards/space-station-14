using Robust.Client.AutoGenerated;
using Robust.Client.Input;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Input;
using Robust.Shared.Utility;

namespace Content.Client.Paper.UI;

[GenerateTypedNameReferences]
public sealed partial class PaperWriteWindow : DefaultWindow
{
    [Dependency] private readonly IInputManager _inputManager = null!;
    public event Action<string>? OnSaved;

    private int _maxInputLength = -1;

    public void SetMaxInputLength(int maxInputLength)
    {
        _maxInputLength = maxInputLength;
        UpdateFillState();
    }

    public PaperWriteWindow()
    {
        IoCManager.InjectDependencies(this);
        RobustXamlLoader.Load(this);

        UpdateFillState();
        InputContainer.Input.OnTextChanged += _ => UpdateFillState();
        SaveButton.OnPressed += _ =>
        {
            SaveButton.Disabled = true;
            OnSaved?.Invoke(Rope.Collapse(InputContainer.Input.TextRope));
            Clear();
            Close();
        };
        InputContainer.Input.OnKeyBindUp += InputOnKeyBindUp;

        SaveButton.Text = Loc.GetString("paper-ui-save-button",
            ("keybind", _inputManager.GetKeyFunctionButtonString(EngineKeyFunctions.MultilineTextSubmit)));
    }

    public void Clear() => InputContainer.Clear();

    private void InputOnKeyBindUp(GUIBoundKeyEventArgs args)
    {
        if (args.Function != EngineKeyFunctions.MultilineTextSubmit)
            return;

        if (SaveButton.Disabled)
            return;

        SaveButton.Disabled = true;
        OnSaved?.Invoke(Rope.Collapse(InputContainer.Input.TextRope));
        args.Handle();
    }

    private void UpdateFillState()
    {
        if (_maxInputLength != -1)
        {
            var inputLength = InputContainer.Input.TextLength;

            FillStatus.Text = Loc.GetString("paper-ui-fill-level",
                ("currentLength", inputLength),
                ("maxLength", _maxInputLength));

            if (inputLength == 0)
            {
                SaveButton.Disabled = true;
                return;
            }

            // Disable the save button if we've gone over the limit
            SaveButton.Disabled = inputLength > _maxInputLength;
        }
        else
        {
            FillStatus.Text = string.Empty;
            SaveButton.Disabled = false;
        }
    }
}
