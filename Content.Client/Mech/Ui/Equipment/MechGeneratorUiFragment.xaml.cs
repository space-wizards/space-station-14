using Content.Shared.Mech;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Client.UserInterface;

namespace Content.Client.Mech.Ui.Equipment;

[GenerateTypedNameReferences]
public sealed partial class MechGeneratorUiFragment : BoxContainer
{
    public event Action? OnEject;

    public MechGeneratorUiFragment()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
        EjectButton.OnPressed += _ => OnEject?.Invoke();
    }

    public void UpdateContents(MechGeneratorUiState state)
    {
        OutputLabel.Text = Loc.GetString("mech-generator-output", ("rate", $"{state.ChargeCurrent:F0}/{state.ChargeMax:F0}"));
        if (state.HasFuel)
        {
            FuelLabel.Visible = true;
            FuelLabel.Text = Loc.GetString("mech-generator-fuel", ("name", state.FuelName ?? ""), ("amount", $"{state.FuelAmount:F0}/{state.FuelCapacity:F0}"));
            EjectButton.Visible = true;
        }
        else
        {
            FuelLabel.Visible = false;
            EjectButton.Visible = false;
        }
    }
}
