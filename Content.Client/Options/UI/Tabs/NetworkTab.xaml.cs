using Content.Shared.CCVar;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;
using Robust.Shared;
using Robust.Shared.Configuration;
using Robust.Client.GameStates;

namespace Content.Client.Options.UI.Tabs;

[GenerateTypedNameReferences]
public sealed partial class NetworkTab : Control
{
    [Dependency] private readonly IConfigurationManager _cfg = default!;
    [Dependency] private readonly IClientGameStateManager _stateMan = default!;

    public NetworkTab()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        Control.AddOptionCheckBox(CVars.NetPredict, NetPredictCheckBox);

        Control.AddOptionSlider(
            CVars.NetBufferSize,
            NetInterpRatioSlider,
            _stateMan.MinBufferSize,
            _cfg.GetCVar(CCVars.MaxNetBufferSizeConfigured));

        Control.AddOptionSlider(
            CVars.NetPredictTickBias,
            NetPredictTickBiasSlider,
            _cfg.GetCVar(CCVars.MinNetPredictTickBiasConfigured),
            _cfg.GetCVar(CCVars.MaxNetPredictTickBiasConfigured));

        Control.AddOptionSlider(
            CVars.NetPVSEntityBudget,
            NetPvsSpawnSlider,
            _cfg.GetCVar(CCVars.MinNetPVSEntityBudgetConfigured),
            _cfg.GetCVar(CCVars.MaxNetPVSEntityBudgetConfigured));

        Control.AddOptionSlider(
            CVars.NetPVSEntityEnterBudget,
            NetPvsEntrySlider,
            _cfg.GetCVar(CCVars.MinNetPVSEntityEnterBudgetConfigured),
            _cfg.GetCVar(CCVars.MaxNetPVSEntityEnterBudgetConfigured));

        Control.AddOptionSlider(
            CVars.NetPVSEntityExitBudget,
            NetPvsLeaveSlider,
            _cfg.GetCVar(CCVars.MinNetPVSEntityExitBudgetConfigured),
            _cfg.GetCVar(CCVars.MaxNetPVSEntityExitBudgetConfigured));

        Control.Initialize();
    }
}
