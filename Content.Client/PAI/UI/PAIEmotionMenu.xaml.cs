using Content.Client.UserInterface.Controls;
using Content.Shared.PAI;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.PAI.UI;

[GenerateTypedNameReferences]
public sealed partial class PAIEmotionMenu : FancyWindow
{
    private PAIEmotion _currentEmotion;

    private readonly Dictionary<PAIEmotion, string> _emotions = new()
    {
        { PAIEmotion.Neutral, "pai-emotion-neutral" },
        { PAIEmotion.Happy, "pai-emotion-happy" },
        { PAIEmotion.Sad, "pai-emotion-sad" },
        { PAIEmotion.Angry, "pai-emotion-angry" }
    };

    public event Action<PAIEmotion>? OnEmotionSelected;

    public PAIEmotionMenu(PAIEmotion currentEmotion)
    {
        RobustXamlLoader.Load(this);
        _currentEmotion = currentEmotion;

        foreach (var emotion in _emotions)
        {
            EmotionOptions.AddItem(Loc.GetString(emotion.Value));
        }

        EmotionOptions.OnItemSelected += idx =>
        {
            var emotion = (PAIEmotion)idx.Id;
            OnEmotionSelected?.Invoke(emotion);
            EmotionOptions.SelectId(idx.Id);
        };

        // Initialize the current emotion in the dropdown
        EmotionOptions.TrySelectId((int)currentEmotion);
    }

    public void UpdateEmotion(PAIEmotion newEmotion)
    {
        if (_currentEmotion == newEmotion)
            return;

        _currentEmotion = newEmotion;
        EmotionOptions.TrySelectId((int)newEmotion);
    }
}
