light_mode unshaded;

uniform sampler2D SCREEN_TEXTURE;
uniform highp vec3 tint; // Colour of the tint
uniform highp float luminance_threshold; // number between 0 and 1
uniform highp float noise_amount; // number between 0 and 1

lowp float rand(lowp vec2 n) {
  return 0.5 + 0.5 * fract(sin(dot(n.xy, vec2 (12.9898, 78.233)))* 43758.5453);
}

void fragment() {

highp vec4 color = zTextureSpec(SCREEN_TEXTURE, UV);

// convert color to grayscale using luminance
highp float grey = zGrayscale(color.rgb) * 2.0;

// apply night vision color tint
color.rgb = mix(color.rgb, tint, grey);

// add some noise for realism
lowp float noise = zRandom(UV + sin(TIME/10.0)).x * noise_amount;

// One approach I tried for noise that seems to work out nicely.
// You can increase the intensity of the noise by scaling the third parameter of mix, too.
color.rgb += mix(color.rgb, color.rgb*noise, noise)*4.0;

COLOR = color;
}
