- type: entity
  parent: [BaseMob, StripableInventoryBase]
  id: XenoborgsBaseChassis
  name: xenoborg
  description: A man-machine hybrid that aims to replicate itself. They love extracting brains to insert into fresh xenoborg chassis to grow their army.
  save: false
  abstract: true
  components:
  - type: RandomMetadata
    nameSegments:
    - NamesXenoborg
  - type: Sprite
    sprite: Mobs/Silicon/chassis.rsi
  - type: Reactive
    groups:
      Acidic: [Touch]
  - type: DamageOnHighSpeedImpact
    damage:
      types:
        Blunt: 5
    soundHit:
      collection: MetalThud
  - type: CombatMode
  - type: NoSlip
  - type: StaticPrice
    price: 1250
  - type: Fixtures
    fixtures:
      fix1:
        shape:
          !type:PhysShapeCircle
          radius: 0.35
        density: 150
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: MovementSpeedModifier
    baseWalkSpeed : 2.5
    baseSprintSpeed : 4.5
  - type: RotationVisuals
    horizontalRotation: 90
  - type: MobState
    allowedStates:
    - Alive
    - Critical
    - Dead
  - type: MobThresholds
    thresholds: # slightly tankier than a normal borg
      0: Alive
      125: Critical
      250: Dead
    stateAlertDict:
      Alive: BorgHealth
      Critical: BorgCrit
      Dead: BorgDead
    showOverlays: false
    allowRevives: true
  - type: HealthExaminable
    examinableTypes:
      - Blunt
      - Slash
      - Piercing
      - Heat
      - Shock
    locPrefix: silicon
  - type: UserInterface
    interfaces:
      enum.SiliconLawsUiKey.Key:
        type: SiliconLawBoundUserInterface
        requireInputValidation: false
      enum.BorgUiKey.Key:
        type: BorgBoundUserInterface
      enum.StrippingUiKey.Key:
        type: StrippableBoundUserInterface
  - type: ActivatableUI
    key: enum.BorgUiKey.Key
  - type: SiliconLawBound
  - type: ActionGrant
    actions:
    - ActionViewLaws
  - type: EmagSiliconLaw # should xenoborgs be emagable?
    stunTime: 5
  - type: SiliconLawProvider
    laws: XenoborgLawset # custom laws here
    subverted: true
  # - type: IonStormTarget # can't get ion stormed
  - type: Inventory
    templateId: borg
  - type: Hands
    showInHands: false
    disableExplosionRecursion: true
    canBeStripped: false
  - type: ComplexInteraction
  - type: IntrinsicRadioReceiver
  # can only use binary and xenoborg channel
  - type: IntrinsicRadioTransmitter
    channels:
    - Xenoborg
    - Binary
  # but can hear the mothership channel
  - type: ActiveRadio
    channels:
    - Mothership
    - Xenoborg
    - Binary
  - type: ZombieImmune
  - type: Repairable
    doAfterDelay: 13 # 25% more HP, so 30% more time to heal
    allowSelfRepair: false
  - type: BorgChassis
    maxModules: 0
    hasMindState: robot_e
    noMindState: robot_e_r
    moduleWhitelist:
      tags:
      - XenoborgModuleGeneric
  - type: LockingWhitelist
    blacklist:
      components:
      - RoboticsConsole
    whitelist:
      components:
      - BorgChassis
  - type: WiresPanel
    openingTool: Prying
  - type: ActivatableUIRequiresPanel
  - type: NameIdentifier
    group: Silicon
  - type: ContainerContainer
    containers:
      borg_brain: !type:ContainerSlot { }
      cell_slot: !type:ContainerSlot { }
      borg_module: !type:Container { }
      part-container: !type:Container
  - type: PowerCellSlot
    cellSlotId: cell_slot
    fitsInCharger: true
  - type: ItemToggle
    onActivate: false # You should not be able to turn off a borg temporarily.
    activated: false # gets activated when a mind is added
    onUse: false # no item-borg toggling sorry
  - type: ItemTogglePointLight
  - type: AccessToggle
  - type: PowerCellDraw
    drawRate: 0.6
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
  - type: Body
  - type: StatusEffects
    allowed:
    - Stun
    - KnockedDown
    - SlowedDown
    - Flashed
  - type: TypingIndicator
    proto: xenoborg
  - type: Speech
    speechVerb: Robotic
    speechSounds: Xenoborg
    allowedEmotes:
    - Laugh
  - type: Vocal
    sounds:
      Unsexed: UnisexSiliconXenoborg
    screamAction: null
  - type: DamagedSiliconAccent
  - type: UnblockableSpeech
  - type: FootstepModifier
    footstepSoundCollection:
      collection: FootstepXenoborg
  - type: SpamEmitSound # makes a creppy noise randomly
    minInterval: 30
    maxInterval: 45
    sound:
      path: /Audio/Machines/genetics.ogg
      params:
        volume: -8
        maxDistance: 5
        variation: 0.05
  - type: SpamEmitSoundRequirePower
  - type: Construction
    graph: Cyborg
    node: cyborg
    containers:
    - part-container
    - cell_slot
  - type: Lock
    locked: true
    unlockOnClick: false
  - type: ActivatableUIRequiresLock
  - type: LockedWiresPanel
  - type: NpcFactionMember
    factions:
    - Xenoborg
  - type: Damageable
    damageContainer: Silicon
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 90
      behaviors:
      - !type:PlaySoundBehavior
        sound:
          path: /Audio/Machines/warning_buzzer.ogg
          params:
            volume: 5
    - trigger:
        !type:DamageTrigger
        damage: 375
      behaviors:
      - !type:PlaySoundBehavior
        sound:
          collection: MetalBreak
      - !type:EmptyContainersBehaviour
        containers:
        - borg_brain
        - borg_module
        - cell_slot
      - !type:DoActsBehavior
        acts: [ "Destruction" ]
  - type: HandheldLight
    toggleOnInteract: false
    wattage: 0.2
    blinkingBehaviourId: blinking
    radiatingBehaviourId: radiating
  - type: LightBehaviour
    behaviours:
    - !type:FadeBehaviour
      id: radiating
      maxDuration: 2.0
      startValue: 3.0
      endValue: 2.0
      isLooped: true
      reverseWhenFinished: true
    - !type:PulseBehaviour
      id: blinking
      interpolate: Nearest
      maxDuration: 1.0
      minValue: 0.1
      maxValue: 2.0
      isLooped: true
  - type: ToggleableLightVisuals
  - type: PointLight
    color: "#0033ff"
    enabled: false
    mask: /Textures/Effects/LightMasks/cone.png
    autoRot: true
    radius: 4
    netsync: false
  - type: Pullable
  - type: Puller
    needsHands: false
  - type: StandingState
  - type: Tag
    tags:
    - SiliconEmotes
    - DoorBumpOpener
    - FootstepSound
    - CanPilot
  - type: Emoting
  - type: GuideHelp
    guides:
    - Cyborgs
    - Robotics
    # TODO: add Xenoborg guide (part 7 spoilers)
  - type: ProtectedFromStepTriggers
  - type: Access
    enabled: false
    tags:
    - Xenoborg
  - type: AccessReader
    access: [["Xenoborg"]]
  - type: ShowJobIcons
  - type: InteractionPopup
    interactSuccessSound:
      path: /Audio/Ambience/Objects/periodic_beep.ogg
  - type: DamageOnInteractProtection
    damageProtection:
      flatReductions:
        Heat: 10 # capable of touching light bulbs and stoves without feeling pain!

- type: entity
  abstract: true
  id: XenoborgTransponder
  components:
  - type: BorgTransponder
  - type: DeviceNetwork
    deviceNetId: Wireless
    receiveFrequencyId: Xenoborg
    transmitFrequencyId: Mothership
    savableAddress: false
  - type: SurveillanceCamera # they act like cameras for the mothership
    networkSet: true
    nameSet: True
    id: Xenoborg
  - type: OnUseTimerTrigger
    delay: 3
    examinable: false
    beepSound:
      path: /Audio/Effects/Cargo/buzz_two.ogg
      params:
        volume: -4
  - type: AutomatedTimer
  - type: ExplodeOnTrigger
  # explodes when the mothership is destroyed
  - type: Explosive
    explosionType: Minibomb
    deleteAfterExplosion: false # let damage threshold gib the borg
    totalIntensity: 200
    intensitySlope: 20
    maxIntensity: 100
    canCreateVacuum: false # its for killing the borg not the station


# the xenoborg types
- type: entity
  parent: [ XenoborgsBaseChassis, XenoborgTransponder ]
  id: XenoborgEngi
  name: engi xenoborg
  suffix: with brain
  description: A man-machine hybrid that aims to replicate itself. They love extracting brains to insert into fresh xenoborg chassis to grow their army. This one seems to be an engineering type, as it has more tools for supporting the other xenoborgs.
  components:
  - type: BorgTransponder
    name: engi xenoborg
    sprite:
      sprite: Mobs/Silicon/chassis.rsi
      state: xenoborg_engi
  - type: Sprite
    layers:
    - state: xenoborg_engi
    - state: xenoborg_engi_e
      map: ["enum.BorgVisualLayers.Light"]
      shader: unshaded
      visible: false
    - state: xenoborg_engi_l
      shader: unshaded
      map: ["light"]
      visible: false
  - type: BorgChassis
    maxModules: 7
    hasMindState: xenoborg_engi_e
    noMindState: xenoborg_engi_e_r
    moduleWhitelist:
      tags:
      - XenoborgModuleGeneric
      - XenoborgModuleEngi
      - BorgModuleEngineering
  - type: ContainerFill
    containers:
      borg_brain:
      - MMIFilled
      borg_module:
      - XenoborgModuleBasic
      - BorgModuleAdvancedTool
      - BorgModuleConstruction
      - BorgModuleRCD
      - BorgModuleCable
      - XenoborgModuleAccessBreaker
      - XenoborgModuleFireExtinguisher
  - type: ShowHealthBars
    damageContainers:
    - Inorganic
    - Silicon
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellHigh

- type: entity
  parent: [ XenoborgsBaseChassis, XenoborgTransponder ]
  id: XenoborgHeavy
  name: heavy xenoborg
  suffix: with brain
  description: A man-machine hybrid that aims to replicate itself. They love extracting brains to insert into fresh xenoborg chassis to grow their army. This type is has heavy lasers and is covered in thick armor plates. It may be tougher, but its speed matches its brawn.
  components:
  - type: BorgTransponder
    name: heavy xenoborg
    sprite:
      sprite: Mobs/Silicon/chassis.rsi
      state: xenoborg_heavy
  - type: Sprite
    layers:
    - state: xenoborg_heavy
    - state: xenoborg_heavy_e
      map: ["enum.BorgVisualLayers.Light"]
      shader: unshaded
      visible: false
    - state: xenoborg_heavy_l
      shader: unshaded
      map: ["light"]
      visible: false
  - type: BorgChassis
    maxModules: 4
    hasMindState: xenoborg_heavy_e
    noMindState: xenoborg_heavy_e_r
    moduleWhitelist:
      tags:
      - XenoborgModuleGeneric
      - XenoborgModuleHeavy
  - type: MovementSpeedModifier # slower
    baseWalkSpeed : 1.2
    baseSprintSpeed : 2.2
  - type: FlashImmunity
  - type: MobThresholds # tankier
    thresholds:
      0: Alive
      250: Critical
      500: Dead
    stateAlertDict:
      Alive: BorgHealth
      Critical: BorgCrit
      Dead: BorgDead
    showOverlays: false
    allowRevives: true
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 190
      behaviors:
      - !type:PlaySoundBehavior
        sound:
          path: /Audio/Machines/warning_buzzer.ogg
          params:
            volume: 5
    - trigger:
        !type:DamageTrigger
        damage: 750
      behaviors:
      - !type:PlaySoundBehavior
        sound:
          collection: MetalBreak
      - !type:EmptyContainersBehaviour
        containers:
        - borg_brain
        - cell_slot
      - !type:DoActsBehavior
        acts: [ "Destruction" ]
  - type: Repairable
    doAfterDelay: 25 # more HP, more time to heal
  - type: ContainerFill
    containers:
      borg_brain:
      - MMIFilled
      borg_module:
      - XenoborgModuleBasic
      - XenoborgModuleTool
      - XenoborgModuleLaser
      - XenoborgModuleJammer
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellHigh

- type: entity
  parent: [ XenoborgsBaseChassis, XenoborgTransponder ]
  id: XenoborgScout
  name: scout xenoborg
  suffix: with brain
  description: A man-machine hybrid that aims to replicate itself. They love extracting brains to insert into fresh xenoborg chassis to grow their army. This is a scout type, its nimble thrusters allow it to move quickly through space.
  components:
  - type: BorgTransponder
    name: scout xenoborg
    sprite:
      sprite: Mobs/Silicon/chassis.rsi
      state: xenoborg_scout
  - type: Sprite
    layers:
      - state: xenoborg_scout
      - state: xenoborg_scout_e
        map: ["enum.BorgVisualLayers.Light"]
        shader: unshaded
        visible: false
      - state: xenoborg_scout_l
        shader: unshaded
        map: ["light"]
        visible: false
  - type: FootstepModifier # it flies instead of walking
    footstepSoundCollection:
      collection: FootstepHoverXenoborg
  - type: FlashImmunity
  - type: BorgChassis
    maxModules: 4
    hasMindState: xenoborg_scout_e
    noMindState: xenoborg_scout_e_r
    moduleWhitelist:
      tags:
      - XenoborgModuleGeneric
      - XenoborgModuleScout
  - type: MovementSpeedModifier # faster
    baseWalkSpeed : 3
    baseSprintSpeed : 6
  - type: ContainerFill
    containers:
      borg_brain:
      - MMIFilled
      borg_module:
      - XenoborgModuleBasic
      - XenoborgModuleTool
      - XenoborgModuleSword
      - XenoborgModuleSpaceMovement
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellHigh

- type: entity
  parent: [ XenoborgsBaseChassis, XenoborgTransponder ]
  id: XenoborgStealth
  name: stealth xenoborg
  suffix: with brain
  description: A man-machine hybrid that aims to replicate itself. They love extracting brains to insert into fresh xenoborg chassis to grow their army. This one is a stealth type. Its armor shimmers in the light like no other material you've seen.
  components:
  - type: BorgTransponder
    name: stealth xenoborg
    sprite:
      sprite: Mobs/Silicon/chassis.rsi
      state: xenoborg_stealth
  - type: Sprite
    layers:
      - state: xenoborg_stealth
      - state: xenoborg_stealth_e
        map: ["enum.BorgVisualLayers.Light"]
        shader: unshaded
        visible: false
      - state: xenoborg_stealth_l
        shader: unshaded
        map: ["light"]
        visible: false
  - type: FootstepModifier # it flies instead of walking
    footstepSoundCollection:
      collection: FootstepHoverXenoborg
  - type: BorgChassis
    maxModules: 5
    hasMindState: xenoborg_stealth_e
    noMindState: xenoborg_stealth_e_r
    moduleWhitelist:
      tags:
      - XenoborgModuleGeneric
      - XenoborgModuleStealth
  - type: MovementAlwaysTouching # it flies in space with tiny thrusters
  - type: SpamEmitSound # longer interval to make the creppy sound
    minInterval: 50
    maxInterval: 150
  - type: ContainerFill
    containers:
      borg_brain:
      - MMIFilled
      borg_module:
      - XenoborgModuleBasic
      - XenoborgModuleTool
      - XenoborgModuleHypo
      - XenoborgModuleChameleonProjector
      - XenoborgModuleCloakDevice
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellHigh


# xenoborgs empty
- type: entity
  parent: XenoborgEngi
  id: XenoborgEngiPrinted
  suffix: no brain
  components:
  - type: ContainerFill
    containers:
      borg_brain:
      - MMI
      borg_module:
      - XenoborgModuleBasic
      - BorgModuleAdvancedTool
      - BorgModuleConstruction
      - BorgModuleRCD
      - BorgModuleCable
      - XenoborgModuleAccessBreaker
      - XenoborgModuleFireExtinguisher
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellHighPrinted

- type: entity
  parent: XenoborgHeavy
  id: XenoborgHeavyPrinted
  suffix: no brain
  components:
  - type: ContainerFill
    containers:
      borg_brain:
      - MMI
      borg_module:
      - XenoborgModuleBasic
      - XenoborgModuleTool
      - XenoborgModuleLaser
      - XenoborgModuleJammer
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellHighPrinted

- type: entity
  parent: XenoborgScout
  id: XenoborgScoutPrinted
  suffix: no brain
  components:
  - type: ContainerFill
    containers:
      borg_brain:
      - MMI
      borg_module:
      - XenoborgModuleBasic
      - XenoborgModuleTool
      - XenoborgModuleSword
      - XenoborgModuleSpaceMovement
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellHighPrinted

- type: entity
  parent: XenoborgStealth
  id: XenoborgStealthPrinted
  suffix: no brain
  components:
  - type: ContainerFill
    containers:
      borg_brain:
      - MMI
      borg_module:
      - XenoborgModuleBasic
      - XenoborgModuleTool
      - XenoborgModuleHypo
      - XenoborgModuleChameleonProjector
      - XenoborgModuleCloakDevice
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellHighPrinted
