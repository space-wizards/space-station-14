- type: entity
  parent: [BaseMob, StripableInventoryBase]
  id: XenoborgBaseChassi
  name: xenoborg
  description: A man-machine hybrid that aims to replicate itself. They love gibbing people and placing their brains into empty xenoborgs over and over.
  save: false
  abstract: true
  components:
  - type: RandomMetadata
    nameSegments:
    - NamesXenoborg
  - type: Sprite
    sprite: Mobs/Silicon/chassis.rsi
  - type: Reactive
    groups:
      Acidic: [Touch]
  - type: DamageOnHighSpeedImpact
    damage:
      types:
        Blunt: 5
    soundHit:
      collection: MetalThud
  - type: CombatMode
  - type: NoSlip
  - type: StaticPrice
    price: 1250
  - type: Fixtures
    fixtures:
      fix1:
        shape:
          !type:PhysShapeCircle
          radius: 0.35
        density: 150
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: MovementSpeedModifier
    baseWalkSpeed : 2.5
    baseSprintSpeed : 4.5
  - type: RotationVisuals
    horizontalRotation: 90
  - type: MobState
    allowedStates:
    - Alive
    - Critical
    - Dead
  - type: MobThresholds
    thresholds: # slightly tankier than a normal borg
      0: Alive
      125: Critical
      250: Dead
    stateAlertDict:
      Alive: BorgHealth
      Critical: BorgCrit
      Dead: BorgDead
    showOverlays: false
    allowRevives: true
  - type: HealthExaminable
    examinableTypes:
      - Blunt
      - Slash
      - Piercing
      - Heat
      - Shock
    locPrefix: silicon
  - type: UserInterface
    interfaces:
      enum.SiliconLawsUiKey.Key:
        type: SiliconLawBoundUserInterface
        requireInputValidation: false
      enum.BorgUiKey.Key:
        type: BorgBoundUserInterface
      enum.StrippingUiKey.Key:
        type: StrippableBoundUserInterface
  - type: ActivatableUI
    key: enum.BorgUiKey.Key
  - type: SiliconLawBound
  - type: ActionGrant
    actions:
    - ActionViewLaws
  - type: EmagSiliconLaw # should xenoborgs be emagable?
    stunTime: 5
  - type: SiliconLawProvider
    laws: XenoborgLawset # custom laws here
    subverted: true
  # - type: IonStormTarget # can't get ion stormed
  - type: Inventory
    templateId: borg
  - type: Hands
    showInHands: false
    disableExplosionRecursion: true
    canBeStripped: false
  - type: ComplexInteraction
  - type: IntrinsicRadioReceiver
  # can only use binary and xenoborg channel
  - type: IntrinsicRadioTransmitter
    channels:
    - Xenoborg
    - Binary
  # but can hear the mothership channel
  - type: ActiveRadio
    channels:
    - Mothership
    - Xenoborg
    - Binary
  - type: ZombieImmune
  - type: Repairable
    doAfterDelay: 10
    allowSelfRepair: false
  - type: BorgChassis
    maxModules: 7
    hasMindState: robot_e
    noMindState: robot_e_r
    moduleWhitelist:
      tags:
      - XenoborgModuleGeneric
  - type: LockingWhitelist
    blacklist:
      components:
      - RoboticsConsole 
    whitelist:
      components:
      - BorgChassis
  - type: WiresPanel
  - type: ActivatableUIRequiresPanel
  - type: NameIdentifier
    group: Silicon
  - type: ContainerContainer
    containers:
      borg_brain: !type:ContainerSlot { }
      cell_slot: !type:ContainerSlot { }
      borg_module: !type:Container { }
      part-container: !type:Container
  - type: PowerCellSlot
    cellSlotId: cell_slot
    fitsInCharger: true
  - type: ItemToggle
    onActivate: false # You should not be able to turn off a borg temporarily.
    activated: false # gets activated when a mind is added
    onUse: false # no item-borg toggling sorry
  - type: ItemTogglePointLight
  - type: AccessToggle
  - type: PowerCellDraw
    drawRate: 0.6
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
  - type: Body
  - type: StatusEffects
    allowed:
    - Stun
    - KnockedDown
    - SlowedDown
    - Flashed
  - type: TypingIndicator
    proto: robot
  - type: Speech
    speechVerb: Robotic
    speechSounds: Xenoborg
    allowedEmotes:
    - Laugh
  - type: Vocal
    sounds:
      Unsexed: UnisexSiliconXenoborg
    screamAction: null
  - type: DamagedSiliconAccent 
  - type: UnblockableSpeech
  - type: FootstepModifier
    footstepSoundCollection:
      collection: FootstepBorg
  - type: SpamEmitSound # makes a creppy noise randomly
    minInterval: 30
    maxInterval: 45
    sound:
      path: /Audio/Voice/Xenoborg/xenoborg_spam.ogg
      params:
        volume: -8
        maxDistance: 5
        variation: 0.05
  - type: SpamEmitSoundRequirePower
  - type: Construction
    graph: Cyborg
    node: cyborg
    containers:
    - part-container
    - cell_slot
  - type: Lock
    locked: true
    unlockOnClick: false
  - type: ActivatableUIRequiresLock
  - type: LockedWiresPanel
  - type: NpcFactionMember
    factions:
    - Xenoborg
  - type: Damageable
    damageContainer: Silicon
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 90
      behaviors:
      - !type:PlaySoundBehavior
        sound:
          path: /Audio/Machines/warning_buzzer.ogg
          params:
            volume: 5
    - trigger:
        !type:DamageTrigger
        damage: 375
      behaviors:
      - !type:PlaySoundBehavior
        sound:
          collection: MetalBreak
      - !type:EmptyContainersBehaviour
        containers:
        - borg_brain
        - borg_module
        - cell_slot
      - !type:DoActsBehavior
        acts: [ "Destruction" ]
  - type: HandheldLight
    toggleOnInteract: false
    wattage: 0.2
    blinkingBehaviourId: blinking
    radiatingBehaviourId: radiating
  - type: LightBehaviour
    behaviours:
    - !type:FadeBehaviour
      id: radiating
      maxDuration: 2.0
      startValue: 3.0
      endValue: 2.0
      isLooped: true
      reverseWhenFinished: true
    - !type:PulseBehaviour
      id: blinking
      interpolate: Nearest
      maxDuration: 1.0
      minValue: 0.1
      maxValue: 2.0
      isLooped: true
  - type: ToggleableLightVisuals
  - type: PointLight
    color: "#0033ff"
    enabled: false
    mask: /Textures/Effects/LightMasks/cone.png
    autoRot: true
    radius: 4
    netsync: false
  - type: Pullable
  - type: Puller
    needsHands: false
  - type: StandingState
  - type: Tag
    tags:
    - SiliconEmotes
    - DoorBumpOpener
    - FootstepSound
    - CanPilot
  - type: Emoting
  - type: GuideHelp
    guides:
    - Cyborgs
    - Robotics
    # TODO: add Xenoborg guide (part 7 spoilers)
  - type: ProtectedFromStepTriggers
  - type: Access
    enabled: false
    tags:
    - Xenoborg
  - type: AccessReader
    access: [["Xenoborg"]]
  - type: ShowJobIcons
  - type: InteractionPopup
    interactSuccessSound:
      path: /Audio/Ambience/Objects/periodic_beep.ogg
  - type: DamageOnInteractProtection
    damageProtection:
      flatReductions:
        Heat: 10 # capable of touching light bulbs and stoves without feeling pain!

- type: entity
  abstract: true
  id: XenoborgTransponder
  components:
  - type: BorgTransponder
  - type: DeviceNetwork
    deviceNetId: Wireless
    receiveFrequencyId: Xenoborg
    transmitFrequencyId: Mothership
    savableAddress: false
  - type: SurveillanceCamera # they act like cameras for the mothership
    networkSet: true
    nameSet: True
    id: Xenoborg
  - type: OnUseTimerTrigger
    delay: 3
    examinable: false
    beepSound:
      path: /Audio/Effects/Cargo/buzz_two.ogg
      params:
        volume: -4
  - type: AutomatedTimer
  - type: ExplodeOnTrigger
  # explodes when the mothership is destroyed
  - type: Explosive
    explosionType: Minibomb
    deleteAfterExplosion: false # let damage threshold gib the borg
    totalIntensity: 200
    intensitySlope: 20
    maxIntensity: 100
    canCreateVacuum: false # its for killing the borg not the station


# the xenoborg types
- type: entity
  parent: [ XenoborgBaseChassi, XenoborgTransponder ]
  id: XenoborgEngi
  name: engi xenoborg
  suffix: with brain
  description: A man-machine hybrid that aims to replicate itself. They love gibbing people and placing their brains into empty xenoborgs over and over. This is a engi type, it has more tools and is better for supporting other xenoborgs.
  components:
  - type: BorgTransponder
    name: engi xenoborg
    sprite:
      sprite: Mobs/Silicon/chassis.rsi
      state: xenoborg_engi
  - type: Sprite
    layers:
    - state: xenoborg_engi
    - state: xenoborg_engi_e
      map: ["enum.BorgVisualLayers.Light"]
      shader: unshaded
      visible: false
    - state: xenoborg_engi_l
      shader: unshaded
      map: ["light"]
      visible: false
  - type: BorgChassis
    hasMindState: xenoborg_engi_e
    noMindState: xenoborg_engi_e_r
    moduleWhitelist:
      tags:
      - XenoborgModuleGeneric
      - XenoborgModuleEngi
      - BorgModuleEngineering
  - type: ContainerFill
    containers:
      borg_brain:
      - MMIFilled
      borg_module:
      - XenoborgModuleBasic
      - BorgModuleAdvancedTool
      - BorgModuleConstruction
      - BorgModuleRCD
      - BorgModuleCable
      - XenoborgModuleAccessBreaker
      - XenoborgModuleFireExtinguisher
  - type: ShowHealthBars
    damageContainers:
    - Inorganic
    - Silicon
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellHigh

- type: entity
  parent: [ XenoborgBaseChassi, XenoborgTransponder ]
  id: XenoborgHeavy
  name: heavy xenoborg
  suffix: with brain
  description: A man-machine hybrid that aims to replicate itself. They love gibbing people and placing their brains into empty xenoborgs over and over. This is a heavy type, its slower but tougher and it shoots lasers.
  components:
  - type: BorgTransponder
    name: heavy xenoborg
    sprite:
      sprite: Mobs/Silicon/chassis.rsi
      state: xenoborg_heavy
  - type: Sprite
    layers:
    - state: xenoborg_heavy
    - state: xenoborg_heavy_e
      map: ["enum.BorgVisualLayers.Light"]
      shader: unshaded
      visible: false
    - state: xenoborg_heavy_l
      shader: unshaded
      map: ["light"]
      visible: false
  - type: BorgChassis
    hasMindState: xenoborg_heavy_e
    noMindState: xenoborg_heavy_e_r
    moduleWhitelist:
      tags:
      - XenoborgModuleGeneric
      - XenoborgModuleHeavy
  - type: MovementSpeedModifier # slower
    baseWalkSpeed : 1.2
    baseSprintSpeed : 2.2
  - type: FlashImmunity
  - type: MobThresholds # tankier
    thresholds:
      0: Alive
      400: Critical
      800: Dead
    stateAlertDict:
      Alive: BorgHealth
      Critical: BorgCrit
      Dead: BorgDead
    showOverlays: false
    allowRevives: true
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 300
      behaviors:
      - !type:PlaySoundBehavior
        sound:
          path: /Audio/Machines/warning_buzzer.ogg
          params:
            volume: 5
    - trigger:
        !type:DamageTrigger
        damage: 1200
      behaviors:
      - !type:PlaySoundBehavior
        sound:
          collection: MetalBreak
      - !type:EmptyContainersBehaviour
        containers:
        - borg_brain
        - cell_slot
      - !type:DoActsBehavior
        acts: [ "Destruction" ]
  - type: ContainerFill
    containers:
      borg_brain:
      - MMIFilled
      borg_module:
      - XenoborgModuleBasic
      - XenoborgModuleTool
      - XenoborgModuleLaser
      - XenoborgModuleJammer
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellHigh

- type: entity
  parent: [ XenoborgBaseChassi, XenoborgTransponder ]
  id: XenoborgScout
  name: scout xenoborg
  suffix: with brain
  description: A man-machine hybrid that aims to replicate itself. They love gibbing people and placing their brains into empty xenoborgs over and over. This is a scout type, its faster and is able to fly in space.
  components:
  - type: BorgTransponder
    name: scout xenoborg
    sprite:
      sprite: Mobs/Silicon/chassis.rsi
      state: xenoborg_scout
  - type: Sprite
    layers:
      - state: xenoborg_scout
      - state: xenoborg_scout_e
        map: ["enum.BorgVisualLayers.Light"]
        shader: unshaded
        visible: false
      - state: xenoborg_scout_l
        shader: unshaded
        map: ["light"]
        visible: false
  - type: FootstepModifier # it flies instead of walking
    footstepSoundCollection:
      collection: FootstepHoverBorg
  - type: FlashImmunity
  - type: BorgChassis
    hasMindState: xenoborg_scout_e
    noMindState: xenoborg_scout_e_r
    moduleWhitelist:
      tags:
      - XenoborgModuleGeneric
      - XenoborgModuleScout
  - type: MovementSpeedModifier # faster
    baseWalkSpeed : 3
    baseSprintSpeed : 6
  - type: ContainerFill
    containers:
      borg_brain:
      - MMIFilled
      borg_module:
      - XenoborgModuleBasic
      - XenoborgModuleTool
      - XenoborgModuleSword
      - XenoborgModuleSpaceMovement
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellHigh

- type: entity
  parent: [ XenoborgBaseChassi, XenoborgTransponder ]
  id: XenoborgStealth
  name: stealth xenoborg
  suffix: with brain
  description: A man-machine hybrid that aims to replicate itself. They love gibbing people and placing their brains into empty xenoborgs over and over. This is a stealth type, it can become invisible.
  components:
  - type: BorgTransponder
    name: stealth xenoborg
    sprite:
      sprite: Mobs/Silicon/chassis.rsi
      state: xenoborg_stealth
  - type: Sprite
    layers:
      - state: xenoborg_stealth
      - state: xenoborg_stealth_e
        map: ["enum.BorgVisualLayers.Light"]
        shader: unshaded
        visible: false
      - state: xenoborg_stealth_l
        shader: unshaded
        map: ["light"]
        visible: false
  - type: FootstepModifier # it flies instead of walking
    footstepSoundCollection:
      collection: FootstepHoverBorg
  - type: BorgChassis
    hasMindState: xenoborg_stealth_e
    noMindState: xenoborg_stealth_e_r
    moduleWhitelist:
      tags:
      - XenoborgModuleGeneric
      - XenoborgModuleStealth
  - type: MovementAlwaysTouching # it flies in space with tiny thrusters
  - type: SpamEmitSound # longer interval to make the creppy sound
    minInterval: 50
    maxInterval: 150
  - type: ContainerFill
    containers:
      borg_brain:
      - MMIFilled
      borg_module:
      - XenoborgModuleBasic
      - XenoborgModuleTool
      - XenoborgModuleHypo
      - XenoborgModuleChameleonProjector
      - XenoborgModuleCloakDevice
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellHigh


# xenoborgs empty
- type: entity
  parent: XenoborgEngi
  id: XenoborgEngiPrinted
  suffix: no brain
  components:
  - type: ContainerFill
    containers:
      borg_brain:
      - MMI
      borg_module:
      - XenoborgModuleBasic
      - BorgModuleAdvancedTool
      - BorgModuleConstruction
      - BorgModuleRCD
      - BorgModuleCable
      - XenoborgModuleAccessBreaker
      - XenoborgModuleFireExtinguisher
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellHighPrinted

- type: entity
  parent: XenoborgHeavy
  id: XenoborgHeavyPrinted
  suffix: no brain
  components:
  - type: ContainerFill
    containers:
      borg_brain:
      - MMI
      borg_module:
      - XenoborgModuleBasic
      - XenoborgModuleTool
      - XenoborgModuleLaser
      - XenoborgModuleJammer
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellHighPrinted

- type: entity
  parent: XenoborgScout
  id: XenoborgScoutPrinted
  suffix: no brain
  components:
  - type: ContainerFill
    containers:
      borg_brain:
      - MMI
      borg_module:
      - XenoborgModuleBasic
      - XenoborgModuleTool
      - XenoborgModuleSword
      - XenoborgModuleSpaceMovement
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellHighPrinted

- type: entity
  parent: XenoborgStealth
  id: XenoborgStealthPrinted
  suffix: no brain
  components:
  - type: ContainerFill
    containers:
      borg_brain:
      - MMI
      borg_module:
      - XenoborgModuleBasic
      - XenoborgModuleTool
      - XenoborgModuleHypo
      - XenoborgModuleChameleonProjector
      - XenoborgModuleCloakDevice
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellHighPrinted


## mothership core
- type: body
  id: MothershipCoreBody
  name: "core"
  root: torso
  slots:
    torso:
      part: TorsoBorg
      connections:
      - right2hand
      - right1hand
      - left1hand
      - left2hand
    left1hand:
      part: LeftArmBorg
    left2hand:
      part: LeftArmBorg
    right1hand:
      part: RightArmBorg
    right2hand:
      part: RightArmBorg

- type: startingGear
  id: MothershipCoreGear
  inhand:
  - DoorRemoteXenoborg
  - Omnitool

- type: entity
  parent: 
  - BaseMachinePowered
  - BaseMob
  - StripableInventoryBase
  id: MothershipCore
  name: mothership core
  description: A sentient machine that can produce xenoborgs. Without this the xenoborgs are doomed.
  components:
  - type: Appearance
  - type: WiresVisuals
  - type: Fixtures
    fixtures:
      fix1:
        shape:
          !type:PhysShapeAabb
          bounds: "-0.4,-0.4,0.4,0.4"
        density: 190
        mask:
        - MachineMask
        layer:
          - MachineLayer
  - type: Sprite
    sprite: Mobs/Silicon/mothership_core.rsi
    layers:
    - state: core-idle
      map: ["enum.LatheVisualLayers.IsRunning"]
    - state: core-load
      map: ["enum.MaterialStorageVisualLayers.Inserting"]
    - state: core-o
      map: ["enum.WiresVisualLayers.MaintenancePanel"]
  - type: Machine
    board: null
  - type: Lathe
    idleState: core-idle
    runningState: core-active
    staticPacks:
    - EmptyXenoborgs
    - XenoborgUpgradeModules
  - type: MaterialStorage
    whitelist:
      tags:
      - Sheet
      - RawMaterial
      - Ingot
  - type: PointLight
    color: "#0033ff"
    enabled: true
    radius: 4
    netsync: false
  - type: Anchorable
    flags:
    - Anchorable
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 300
      behaviors:
      - !type:DoActsBehavior
        acts: ["Destruction"]
      - !type:PlaySoundBehavior
        sound:
          collection: MetalGlassBreak
      - !type:ExplodeBehavior
      - !type:SpawnEntitiesBehavior
        spawn:
          MachineFrameDestroyed:
            min: 1
            max: 1
      - !type:SpawnGasBehavior
        gasMixture:
          volume: 1000
          moles:
            - 0 # oxygen
            - 0 # nitrogen
            - 340.5701689 # carbon dioxide
          temperature: 373.15
  - type: Explosive
    explosionType: Default
    maxIntensity: 100
    intensitySlope: 2
    totalIntensity: 200
  - type: WiresPanel
  - type: ActivatableUI
    key: enum.LatheUiKey.Key
  - type: ActivatableUIRequiresPower
  - type: UserInterface
    interfaces:
      enum.SiliconLawsUiKey.Key:
        type: SiliconLawBoundUserInterface
        requireInputValidation: false
      enum.StrippingUiKey.Key:
        type: StrippableBoundUserInterface
      enum.LatheUiKey.Key:
        type: LatheBoundUserInterface
      enum.ResearchClientUiKey.Key:
        type: ResearchClientBoundUserInterface
  - type: Transform
    anchored: true
  - type: Pullable
  - type: StaticPrice
    price: 800
  - type: WarpPoint
    location: mothership core
    follow: true
  - type: VoiceOverride
    nameOverride: MOTHERSHIP CORE
  - type: TypingIndicator
    proto: robot
  - type: Speech
    speechVerb: Robotic
    speechSounds: Xenoborg
    allowedEmotes:
    - Laugh
  - type: Vocal
    sounds:
      Unsexed: UnisexSiliconXenoborg
    screamAction: null
  - type: IntrinsicRadioReceiver
  - type: IntrinsicRadioTransmitter
    channels:
    - Mothership
    - Xenoborg
    - Binary
  - type: ActiveRadio
    channels:
    - Mothership
    - Xenoborg
    - Binary
  - type: XenoborgMothership
  - type: Tag
    tags:
    - SiliconEmotes
    - CanPilot
    - Structure
  - type: Inventory
    templateId: borg
  - type: Loadout
    prototypes: [MothershipCoreGear]
  - type: NpcFactionMember
    factions:
    - Xenoborg
  - type: Body
    prototype: MothershipCoreBody
  - type: Hands
  - type: Puller
  - type: Eye
    drawFov: false
  - type: StationAiOverlay
  - type: IgnoreUIRange
  - type: ComplexInteraction
  - type: MindContainer
  - type: SiliconLawBound
  - type: Actions
  - type: ActionGrant
    actions:
    - ActionViewLaws
  - type: SiliconLawProvider
    laws: MothershipCoreLawset # custom laws here
    subverted: true
  - type: Stripping
  - type: Access
    enabled: true
    tags:
    - Xenoborg
  - type: LockingWhitelist
    blacklist:
      components:
      - RoboticsConsole 
    whitelist:
      components:
      - BorgChassis
