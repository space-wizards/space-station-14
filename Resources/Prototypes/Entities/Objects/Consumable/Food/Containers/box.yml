# Donut

# There is a newer, better version of the donutbox from tgstation included in the
# donut.rsi. The reason it isn't implemented is it requires a StackVisuals offsetting
# the layer sprite by a couple pixels everytime a new donut is added. It also requires
# an alpha color which -Y- said he would implement.

- type: entity
  parent: [ BoxCardboard, BaseBagOpenClose ]
  id: FoodBoxDonut
  name: donut box
  description: Mmm, Donuts.
  components:
  - type: Sprite
    sprite: Objects/Consumable/Food/Baked/donut.rsi
    state: box
    layers:
    - state: box
      map: ["closeLayer"]
    - state: box-open
      map: ["openLayer"]
      visible: false
    - state: box1
      map: ["box1"]
      visible: false
    - state: pink-box2
      map: ["pink-box2"]
      visible: false
    - state: box3
      map: ["box3"]
      visible: false
    - state: pink-box4
      map: ["pink-box4"]
      visible: false
    - state: box5
      map: ["box5"]
      visible: false
    - state: pink-box6
      map: ["pink-box6"]
      visible: false
  - type: Storage
    grid:
    - 0,0,5,0
    whitelist:
      tags:
      - Donut
  - type: Item
    sprite: Objects/Consumable/Food/Baked/donut.rsi
    size: Small
    heldPrefix: box
  - type: StorageFill
    contents:
    - id: FoodDonutPink
      amount: 3
    - id: FoodDonutPlain
      amount: 3
  - type: ItemCounter
    count:
      tags: [Donut]
    composite: true
    layerStates:
    - box1
    - pink-box2
    - box3
    - pink-box4
    - box5
    - pink-box6
  - type: Appearance

# Egg

- type: entity
  parent: [ BoxCardboard, BaseBagOpenClose ]
  id: FoodContainerEgg
  name: egg carton
  description: Don't drop 'em!
  components:
  - type: Sprite
    sprite: Objects/Consumable/Food/egg.rsi
    state: box-closed
    layers:
    - state: box-closed
      map: ["closeLayer"]
    - state: box-open
      map: ["openLayer"]
      visible: false
    - state: box1
      map: ["box1"]
      visible: false
    - state: box2
      map: ["box2"]
      visible: false
    - state: box3
      map: ["box3"]
      visible: false
    - state: box4
      map: ["box4"]
      visible: false
    - state: box5
      map: ["box5"]
      visible: false
    - state: box6
      map: ["box6"]
      visible: false
    - state: box7
      map: ["box7"]
      visible: false
    - state: box8
      map: ["box8"]
      visible: false
    - state: box9
      map: ["box9"]
      visible: false
    - state: box10
      map: ["box10"]
      visible: false
    - state: box11
      map: ["box11"]
      visible: false
    - state: box12
      map: ["box12"]
      visible: false
  - type: Storage
    grid:
    - 0,0,5,1
    whitelist:
      tags:
      - Egg
  - type: Item
    sprite: Objects/Consumable/Food/egg.rsi
    size: Small
  - type: StorageFill
    contents:
    - id: FoodEgg
      amount: 12
  - type: ItemCounter
    count:
      tags: [Egg]
    composite: true
    layerStates:
    - box1
    - box2
    - box3
    - box4
    - box5
    - box6
    - box7
    - box8
    - box9
    - box10
    - box11
    - box12
  - type: Appearance
  # Someday...
  # - type: DamageOnLand
  # - type: DamageOtherOnHit
  # - type: Damageable
  # - type: Destructible
  #   thresholds:
  #   - trigger:
  #       !type:DamageTrigger
  #       damage: 10
  #     behaviors:
  #     - !type:PlaySoundBehavior
  #       collection: desecration
  #     - !type:SpawnEntitiesBehavior
  #       spawn:
  #         EggBoxBroken:
  #           min: 1
  #           max: 1
  #         PuddleEgg:
  #           min: 1
  #           max: 12
  #     - !type:DoActsBehavior
  #       acts: [ "Destruction" ]

- type: entity
  parent: FoodContainerEgg
  id: EggBoxBroken
  suffix: Broken
  components:
  - type: StorageFill
    contents:
    - id: Eggshells
      amount: 12
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 10

# Pizza

# This - is pretty hacky. It works, but you can't have stuff like messy pizza box
# layers after a pizza has been in. Also pizza box stacking, but this is impossible
# Since you could open pizza boxes in the stack.

- type: entity
  parent: BoxCardboard
  id: FoodBoxPizza
  name: pizza box
  components:
  - type: Sprite
    sprite: Objects/Consumable/Food/Baked/pizza.rsi
    drawdepth: SmallObjects
    layers:
    - state: box
      map: ["enum.StorageVisualLayers.Base"]
    - state: box-open
      map: ["enum.StorageVisualLayers.Door"]
  # TODO make these entitystorage again + placeablesurface after entity storage ECS gets merged.
  - type: Storage
    grid:
    - 0,0,3,1
    maxItemSize: Normal
    whitelist:
      components:
      - Utensil
      tags:
      - Pizza
  - type: Item
    sprite: Objects/Consumable/Food/Baked/pizza.rsi
    heldPrefix: box
    shape:
    - 0,0,2,1
  - type: Appearance
  - type: EntityStorageVisuals
    stateDoorOpen: box-open
    stateDoorClosed: box
  - type: StaticPrice
    price: 0

- type: entity
  name: pizza box
  parent: FoodBoxPizza
  id: FoodBoxPizzaFilled
  suffix: Filled
  components:
  - type: Sprite
    layers:
    - state: box
    - state: box-open
      map: ["enum.StorageVisualLayers.Door"]
  - type: StorageFill
    contents:
    - id: FoodPizzaArnold
      prob: 0.15
      orGroup: Pizza
    - id: FoodPizzaDank
      prob: 0.10
      orGroup: Pizza
    - id: FoodPizzaSassysage
      prob: 0.15
      orGroup: Pizza
    - id: FoodPizzaMargherita
      prob: 0.15
      orGroup: Pizza
    - id: FoodPizzaMeat
      prob: 0.15
      orGroup: Pizza
    - id: FoodPizzaMushroom
      prob: 0.15
      orGroup: Pizza
    - id: FoodPizzaPineapple
      prob: 0.15
      orGroup: Pizza
    - id: FoodPizzaVegetable
      prob: 0.15
      orGroup: Pizza
    - id: FoodPizzaDonkpocket
      prob: 0.10
      orGroup: Pizza
    - id: FoodPizzaCotton
      prob: 0.10
      orGroup: Pizza
    - id: FoodPizzaWorldpeas
      prob: 0.05
      orGroup: Pizza
    - id: KnifePlastic

- type: entity
  name: pizza box
  parent: FoodBoxPizzaFilled
  id: FoodBoxPizzaCotton
  suffix: Cotton Pizza
  components:
  - type: StorageFill
    contents:
    - id: FoodPizzaCotton
    - id: KnifePlastic

# Nugget

- type: entity
  parent: [ BoxCardboard, BaseBagOpenClose ]
  id: FoodBoxNugget
  name: chicken nuggets
  description: You suddenly have an urge to trade on the intergalactic stock market.
  components:
  - type: Sprite
    sprite: Objects/Consumable/Food/Baked/nuggets.rsi
    state: box
    layers:
    - state: box
      map: ["closeLayer"]
    - state: box-open
      map: ["openLayer"]
      visible: false
    - state: box1
      map: ["box1"]
      visible: false
    - state: box2
      map: ["box2"]
      visible: false
    - state: box3
      map: ["box3"]
      visible: false
    - state: box4
      map: ["box4"]
      visible: false
    - state: box5
      map: ["box5"]
      visible: false
    - state: box6
      map: ["box6"]
      visible: false
  - type: Storage
    grid:
    - 0,0,1,2
  - type: Item
    sprite: Objects/Consumable/Food/Baked/nuggets.rsi
    size: Small
    heldPrefix: box
  - type: StorageFill
    contents:
    - id: FoodBakedNugget
      amount: 6
  - type: ItemCounter
    count:
      tags: [Nugget]
    composite: true
    layerStates:
    - box1
    - box2
    - box3
    - box4
    - box5
    - box6
  - type: Appearance

# Donkpocket

- type: entity
  parent: BoxCardboard
  id: FoodBoxDonkpocket
  name: box of donk-pockets
  description: 'Instructions: Heat in microwave. Product will cool if not eaten within seven minutes.'
  components:
  - type: Sprite
    sprite: Objects/Consumable/Food/Baked/donkpocket.rsi
    state: box
  - type: Storage
    grid:
    - 0,0,3,2
    whitelist:
      tags:
      - DonkPocket
  - type: Item
    sprite: Objects/Consumable/Food/Baked/donkpocket.rsi
    size: Small
  - type: StorageFill
    contents:
    - id: FoodDonkpocket
      amount: 6
    - id: DonkcoLighter
      amount: 1
      prob: 0.10

- type: entity
  parent: FoodBoxDonkpocket
  id: FoodBoxDonkpocketSpicy
  name: box of spicy-flavoured donk-pockets
  components:
  - type: Sprite
    state: spicy-box
  - type: Item
    sprite: Objects/Consumable/Food/Baked/donkpocket.rsi
  - type: StorageFill
    contents:
    - id: FoodDonkpocketSpicy
      amount: 6

- type: entity
  parent: FoodBoxDonkpocket
  id: FoodBoxDonkpocketTeriyaki
  name: box of teriyaki-flavoured donk-pockets
  components:
  - type: Sprite
    state: teriyaki-box
  - type: Item
    sprite: Objects/Consumable/Food/Baked/donkpocket.rsi
  - type: StorageFill
    contents:
    - id: FoodDonkpocketTeriyaki
      amount: 6

- type: entity
  parent: FoodBoxDonkpocket
  id: FoodBoxDonkpocketPizza
  name: box of pizza-flavoured donk-pockets
  components:
  - type: Sprite
    state: pizza-box
  - type: Item
    sprite: Objects/Consumable/Food/Baked/donkpocket.rsi
  - type: StorageFill
    contents:
    - id: FoodDonkpocketPizza
      amount: 6

- type: entity
  parent: FoodBoxDonkpocket
  id: FoodBoxDonkpocketStonk
  name: box of limited edition stonk-pockets
  components:
  - type: Sprite
    state: stonk-box
  - type: Item
    sprite: Objects/Consumable/Food/Baked/donkpocket.rsi
  - type: StorageFill
    contents:
    - id: FoodDonkpocketStonk
      amount: 6

- type: entity
  parent: FoodBoxDonkpocket
  id: FoodBoxDonkpocketCarp
  name: box of carp-pockets
  components:
  - type: Sprite
    state: carp-box
  - type: StorageFill
    contents:
    - id: FoodDonkpocketCarp
      amount: 6

- type: entity
  parent: FoodBoxDonkpocket
  id: FoodBoxDonkpocketBerry
  name: box of berry-flavoured donk-pockets
  components:
  - type: Sprite
    state: berry-box
  - type: Item
    sprite: Objects/Consumable/Food/Baked/donkpocket.rsi
  - type: StorageFill
    contents:
    - id: FoodDonkpocketBerry
      amount: 6

- type: entity
  parent: FoodBoxDonkpocket
  id: FoodBoxDonkpocketHonk
  name: box of banana-flavoured donk-pockets
  components:
  - type: Sprite
    state: banana-box
  - type: Item
    sprite: Objects/Consumable/Food/Baked/donkpocket.rsi
  - type: StorageFill
    contents:
    - id: FoodDonkpocketHonk
      amount: 6

- type: entity
  parent: FoodBoxDonkpocket
  id: FoodBoxDonkpocketDink
  name: box of dink-pockets
  description: Net Zero carbohydrates! No need for heating!
  components:
  - type: Sprite
    state: dink-box
  - type: Item
    sprite: Objects/Consumable/Food/Baked/donkpocket.rsi
  - type: StorageFill
    contents:
    - id: FoodDonkpocketDink
      amount: 6

- type: entity
  parent: FoodBoxDonkpocket
  id: FoodBoxDonkpocketMoth
  name: box of moth-pockets
  components:
  - type: Sprite
    state: moth-box
  - type: Item
    sprite: Objects/Consumable/Food/Baked/donkpocket.rsi
  - type: StorageFill
    contents:
    - id: FoodDonkpocketMoth
      amount: 6

- type: entity
  parent: [ BoxCardboard, BaseBagOpenClose ]
  id: FoodBoxHappyHonk
  name: happy honk meal
  suffix: empty
  description: The toy is more edible than the food.
  components:
  - type: Sprite
    sprite: Objects/Storage/Happyhonk/clown.rsi
    state: box
    layers:
    - state: box
  - type: Item
    sprite: Objects/Storage/Happyhonk/clown.rsi
    heldPrefix: box
  - type: Tag
    tags:
    - Trash
    - HappyHonk

- type: entity
  parent: FoodBoxHappyHonk
  id: FoodBoxHappyHonkFill
  name: happy honk meal
  suffix: fill; drink, toy
  components:
  - type: EntityTableContainerFill
    containers:
      storagebase: !type:AllSelector
        children:
        - !type:NestedSelector
          tableId: ListDrinkCanSoda
        - !type:GroupSelector
          children:
          - !type:NestedSelector
            tableId: ListBikeHorn
            weight: 0.1
          - !type:NestedSelector
            tableId: ListToySmall
            weight: 0.9

- type: entity
  parent: FoodBoxHappyHonk
  id: FoodBoxHappyHonkFillMeal
  suffix: fill; drink, meal, toy
  description: Someone paid good money to get this fast food meal shipped out this way. It smells fresh, somehow.
  components:
  - type: EntityTableContainerFill
    containers:
      storagebase: !type:AllSelector
        children:
        - !type:GroupSelector
          children:
          - !type:NestedSelector
            tableId: ListFoodBurger
            weight: 0.8
          - !type:NestedSelector
            tableId: ListFoodBurgerExotic
            weight: 0.2
        - !type:NestedSelector
          tableId: ListDrinkCanSoda
        - !type:GroupSelector
          children:
          - !type:NestedSelector
            tableId: ListBikeHorn
            weight: 0.2
          - !type:NestedSelector
            tableId: ListToySmall
            weight: 0.8

- type: entity
  parent: FoodBoxHappyHonk
  id: FoodBoxHappyHonkFillMealBig
  name: happy honk big circus meal
  suffix: fill; drink, large meal, toy
  description: Someone paid good money to get this fast food meal shipped out this way. It smells fresh, somehow.
  components:
  - type: EntityTableContainerFill
    containers:
      storagebase: !type:AllSelector
        children:
        - !type:GroupSelector
          children:
          - id: FoodBurgerBig
            weight: 0.8
          - id: FoodBurgerSuper
            weight: 0.2
        - !type:NestedSelector
          tableId: ListFoodFries
        - !type:NestedSelector
          tableId: ListFoodPieSlice
        - !type:NestedSelector
          tableId: ListDrinkCanSoda
        - !type:GroupSelector
          children:
          - !type:NestedSelector
            tableId: ListBikeHorn
            weight: 0.2
          - !type:NestedSelector
            tableId: ListToySmall
            weight: 0.8

- type: entity
  parent: FoodBoxHappyHonk
  id: FoodBoxHappyHonkMime
  name: happy mime meal
  suffix: empty
  description: A limited mime edition of the happy honk meal.
  components:
  - type: Sprite
    sprite: Objects/Storage/Happyhonk/mime.rsi
    state: box
  - type: Item
    sprite: Objects/Storage/Happyhonk/mime.rsi
    heldPrefix: box
  - type: Tag
    tags:
    - Trash
    - MimeHappyHonk

- type: entity
  parent: FoodBoxHappyHonkMime
  id: FoodBoxHappyHonkMimeFill
  suffix: fill; toy
  components:
  - type: EntityTableContainerFill
    containers:
      storagebase: !type:AllSelector
        children:
        - !type:NestedSelector
          tableId: ListDrinkCanSoda
        - !type:NestedSelector
          tableId: ListToySmall

- type: entity
  parent: [FoodBoxHappyHonk, BaseSyndicateContraband]
  id: FoodBoxHappyHonkNukie
  name: robust nukie meal
  suffix: empty
  description: A sus meal with a potentially explosive surprise.
  components:
  - type: Sprite
    sprite: Objects/Storage/Happyhonk/nukie.rsi
    state: box
  - type: Item
    sprite: Objects/Storage/Happyhonk/nukie.rsi
    heldPrefix: box
  - type: Tag
    tags:
    - Trash

- type: entity
  parent: FoodBoxHappyHonkNukie
  id: FoodBoxHappyHonkNukieFill
  suffix: fill; unsafe toy, drink, meal
  components:
  - type: EntityTableContainerFill
    containers:
      storagebase: !type:AllSelector
        children:
        - !type:GroupSelector
          children:
          - id: FoodSaladValid
            weight: 0.1
          - id: FoodSnackSyndi
            weight: 0.9
        - id: DrinkNukieCan
        - !type:GroupSelector
          children:
          - !type:NestedSelector
            tableId: ListToySmallSyndie
            weight: 0.9
          - !type:NestedSelector
            tableId: ListToySmallSyndieUnsafe
            weight: 0.1

- type: entity
  parent: FoodBoxHappyHonkNukie
  id: FoodBoxHappyHonkNukieFillLunch
  name: robust nukie family meal
  description: Get a nukie family meal deal for only one telecrystal!
  suffix: fill; unsafe toy, family drink, meal
  components:
  - type: Storage
    grid:
    - 0,0,5,2
  - type: EntityTableContainerFill # Would be overkill to make nested tables unless nukie meals are expanded
    containers:
      storagebase: !type:AllSelector
        children:
        - !type:GroupSelector
          rolls: !type:ConstantNumberSelector
            value: 4
          children:
          - id: FoodSaladValid
            weight: 0.2
          - id: FoodSnackSyndi
            weight: 0.8
        - !type:GroupSelector
          rolls: !type:ConstantNumberSelector
            value: 4
          children:
          - id: DrinkColaCan
            weight: 0.8
          - id: DrinkNukieCan
            weight: 0.2
        - !type:GroupSelector
          children:
          - !type:NestedSelector
            tableId: ListToySmallSyndie
            weight: 0.95
          - !type:NestedSelector
            tableId: ListToySmallSyndieUnsafe
            weight: 0.05 # nukies have lots of TC

- type: entity
  parent: FoodBoxHappyHonk
  id: FoodBoxHappyHonkCluwne
  name: woeful jonk meal
  suffix: empty
  description: Nothing good will come of this.
  components:
  - type: Sprite
    sprite: Objects/Storage/Happyhonk/cluwne.rsi
    state: box
  - type: Item
    sprite: Objects/Storage/Happyhonk/cluwne.rsi
    heldPrefix: box
  - type: Tag
    tags:
    - Trash
    - CluwneHappyHonk

- type: entity
  parent: FoodBoxHappyHonkCluwne
  id: FoodBoxHappyHonkCluwneFill
  suffix: fill; horn
  components:
  - type: EntityTableContainerFill
    containers:
      storagebase: !type:AllSelector
        children:
        - id: CluwneHorn

- type: entity
  parent: BoxCardboard
  id: FoodBoxCloth
  name: box of FlutterSoft-brand cloth
  description: Fiber is the most important moth meal of the day! Don't skip it or use bottom-of-the-locker junk, buy high-quality FlutterSoft-brand cloth instead.
  components:
  - type: Sprite
    sprite: Objects/Consumable/Food/ingredients.rsi
    state: cloth-box
  - type: Storage
    grid:
    - 0,0,1,1
    maxItemSize: Normal
    whitelist:
      tags:
      - ClothMade
  - type: Item
    size: Normal
  - type: StorageFill
    contents:
    - id: MaterialCloth10

- type: entityTable
  id: ListFoodBurger
  table: !type:GroupSelector
    children:
    - id: FoodBurgerBacon
    - id: FoodBurgerCarp
    - id: FoodBurgerCheese
    - id: FoodBurgerChicken
    - id: FoodBurgerMcguffin
    - id: FoodBurgerMcrib
    - id: FoodBurgerPlain

- type: entityTable
  id: ListFoodBurgerExotic
  table: !type:GroupSelector
    children:
    - id: FoodBurgerAppendix
    - id: FoodBurgerBaseball
    - id: FoodBurgerBear
    - id: FoodBurgerBig
    - id: FoodBurgerBrain
    - id: FoodBurgerCat
    - id: FoodBurgerClown
    - id: FoodBurgerCrab
    - id: FoodBurgerCrazy
    - id: FoodBurgerDuck
    - id: FoodBurgerEmpowered
    - id: FoodBurgerFive
    - id: FoodBurgerGhost
    - id: FoodBurgerHuman
    - id: FoodBurgerJelly
    - id: FoodBurgerMime
    - id: FoodBurgerMothRoach
    - id: FoodBurgerRat
    - id: FoodBurgerRobot
    - id: FoodBurgerSoy
    - id: FoodBurgerSpell
    - id: FoodBurgerSuper
    - id: FoodBurgerTofu
    - id: FoodBurgerXeno

- type: entityTable
  id: ListFoodFries
  table: !type:GroupSelector
    children:
    - id: FoodMealPotatoLoaded
    - id: FoodMealFries
    - id: FoodMealFriesCheesy
    - id: FoodMealFriesCarrot
    - id: FoodMealNachos
    - id: FoodMealNachosCheesy
    - id: FoodMealNachosCuban

- type: entityTable
  id: ListDrinkCanSoda
  table: !type:GroupSelector
    children:
    - id: DrinkChangelingStingCan
    - id: DrinkColaCan
    - id: DrinkDrGibbCan
    - id: DrinkEnergyDrinkCan
    - id: DrinkFourteenLokoCan
    - id: DrinkGrapeCan
    - id: DrinkIcedTeaCan
    - id: DrinkLemonLimeCan
    - id: DrinkLemonLimeCranberryCan
    - id: DrinkPwrGameCan
    - id: DrinkRootBeerCan
    - id: DrinkShamblersJuiceCan
    - id: DrinkSodaWaterCan
    - id: DrinkSolDryCan
    - id: DrinkSpaceMountainWindCan
    - id: DrinkSpaceUpCan
    - id: DrinkStarkistCan
    - id: DrinkTonicWaterCan

- type: entityTable
  id: ListFoodPieSlice
  table: !type:GroupSelector
    children:
    - id: FoodPieAppleSlice
    - id: FoodPieBananaCreamSlice
    - id: FoodPieCherrySlice

- type: entityTable
  id: ListToySmall
  table: !type:GroupSelector
    children:
    - id: ClothingHeadHatBunny
    - id: FoamBlade
    - id: PersonalAI
    - id: RevolverCapGun
    - id: ToyAi
    - id: ToyDeathRipley
    - id: ToyDurand
    - id: ToyFigurinePassenger
    - id: ToyFireRipley
    - id: ToyGriffin
    - id: ToyGygax
    - id: ToyHonk
    - id: ToyIan
    - id: ToyMarauder
    - id: ToyMauler
    - id: ToyMouse
    - id: ToyNuke
    - id: ToyOdysseus
    - id: ToyOwlman
    - id: ToyPhazon
    - id: ToyReticence
    - id: ToyRipley
    - id: ToyRubberDuck
    - id: ToySeraph
    - id: ToySkeleton
    - id: ToySword

- type: entityTable
  id: ListBikeHorn
  table: !type:GroupSelector
    children:
    - id: BikeHorn
      weight: 0.99
    - id: GoldenBikeHorn
      weight: 0.01

- type: entityTable
  id: ListToySmallSyndie
  table: !type:GroupSelector
    children:
    - id: BalloonSyn
    - id: ClothingHeadHatCatEars
    - id: PlushieNuke
    - id: RevolverCapGun
    - id: ToyDeathRipley
    - id: ToyFigurineCaptain
    - id: ToyFigurineFootsoldier
    - id: ToyFigurineNukie
    - id: ToyFigurineNukieCommander
    - id: ToyFigurineNukieElite
    - id: ToyGygax
    - id: ToyMauler
    - id: ToyNuke
    - id: ToySword

- type: entityTable
  id: ListToySmallSyndieUnsafe
  table: !type:GroupSelector
    children:
    - id: C4
      weight: 0.225
    - id: EnergySword
      weight: 0.10
    - id: RevolverCapGunFake
      weight: 0.225
    - id: SyndicatePersonalAI
      weight: 0.225
    - id: ThrowingKnife
      weight: 0.225
