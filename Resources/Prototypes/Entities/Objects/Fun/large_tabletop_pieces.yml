# Base item for large pieces (regular tabletop ones are exploitable)
- type: entity
  abstract: true
  parent: BaseItem
  id: BaseLargeTabletopPiece
  suffix: Large
  components:
  - type: Sprite
    sprite: Objects/Fun/Tabletop/chess_pieces.rsi

# White chess pieces
- type: entity
  parent: BaseLargeTabletopPiece
  id: LargeWhiteKing
  name: white king
  description: The white king, it can move one square in any direction. If the no piece can move and this piece is threatened, then black wins; however, if it is not under threat and no piece can move then the game ends in a stalemate.
  components:
  - type: Sprite
    sprite: Objects/Fun/Tabletop/chess_pieces.rsi
    state: w_king

- type: entity
  parent: BaseLargeTabletopPiece
  id: LargeWhiteQueen
  name: white queen
  description: The white queen, it can move any amount of tiles in any direction. The most powerful piece on the board, it can be tempting to always promote a pawn to a queen, but this can lead to a stalemate if not handled carefully. Worth 9 points.
  components:
  - type: Sprite
    sprite: Objects/Fun/Tabletop/chess_pieces.rsi
    state: w_queen

- type: entity
  parent: BaseLargeTabletopPiece
  id: LargeWhiteRook
  name: white rook
  description: The white rook, it can move any amount of tiles orthogonally. If neither the king nor the rook of the same colour have moved, and there are no pieces inbetween them, then the rook can be moved one square towards the king and the king is moved to where the rook previously was; this is called castling. Worth 5 points.
  components:
  - type: Sprite
    sprite: Objects/Fun/Tabletop/chess_pieces.rsi
    state: w_rook

- type: entity
  parent: BaseLargeTabletopPiece
  id: LargeWhiteBishop
  name: white bishop
  description: The white bishop, it can move any amount of tiles diagonally. Each colour has one bishop per square colour, this can be useful for quickly figuring out if a move can be threatened without visualising it fully. Worth 3 points.
  components:
  - type: Sprite
    sprite: Objects/Fun/Tabletop/chess_pieces.rsi
    state: w_bishop

- type: entity
  parent: BaseLargeTabletopPiece
  id: LargeWhiteKnight
  name: white knight
  description: The white knight (or horsie), It moves moves in an L (three tiles in a direction, then one tile paralell). It is the only piece that can move over other pieces. Worth 3 points.
  components:
  - type: Sprite
    sprite: Objects/Fun/Tabletop/chess_pieces.rsi
    state: w_knight

- type: entity
  parent: BaseLargeTabletopPiece
  id: LargeWhitePawn
  name: white pawn
  description: The white pawn, it moves one tile toward the opposing side of the board, but can move two if it has not moved yet in the game. It cannot take a piece by moving straight into it like the other pieces, but has to be diagonally adjacent. If it reaches the opposite side of the board, it can be promoted to a knight, bishop, rook or queen. Worth 1 point.
  components:
  - type: Sprite
    sprite: Objects/Fun/Tabletop/chess_pieces.rsi
    state: w_pawn
  - type: Stack
    stackType: LargeWhitePawn

# Black chess pieces
- type: entity
  parent: BaseLargeTabletopPiece
  id: LargeBlackKing
  name: black king
  description: The black king, it can move one square in any direction. If the no piece can move and this piece is threatened, then black wins; however, if it is not under threat and no piece can move then the game ends in a stalemate.
  components:
  - type: Sprite
    sprite: Objects/Fun/Tabletop/chess_pieces.rsi
    state: b_king

- type: entity
  parent: BaseLargeTabletopPiece
  id: LargeBlackQueen
  name: black queen
  description: The black queen, it can move any amount of tiles in any direction. The most powerful piece on the board, it can be tempting to always promote a pawn to a queen, but this can lead to a stalemate if not handled carefully. Worth 9 points.
  components:
  - type: Sprite
    sprite: Objects/Fun/Tabletop/chess_pieces.rsi
    state: b_queen

- type: entity
  parent: BaseLargeTabletopPiece
  id: LargeBlackRook
  name: black rook
  description: The black rook, it can move any amount of tiles orthogonally. If neither the king nor the rook of the same colour have moved, and there are no pieces inbetween them, then the rook can be moved one square towards the king and the king is moved to where the rook previously was; this is called castling. Worth 5 points.
  components:
  - type: Sprite
    sprite: Objects/Fun/Tabletop/chess_pieces.rsi
    state: b_rook

- type: entity
  parent: BaseLargeTabletopPiece
  id: LargeBlackBishop
  name: black bishop
  description: The black bishop, it can move any amount of tiles diagonally. Each colour has one bishop per square colour, this can be useful for quickly figuring out if a move can be threatened without visualising it fully. Worth 3 points.
  components:
  - type: Sprite
    sprite: Objects/Fun/Tabletop/chess_pieces.rsi
    state: b_bishop

- type: entity
  parent: BaseLargeTabletopPiece
  id: LargeBlackKnight
  name: black knight
  description: The black knight (or horsie), it moves moves in an L (three tiles in a direction, then one tile paralell). It is the only piece that can move over other pieces. Worth 3 points.
  components:
  - type: Sprite
    sprite: Objects/Fun/Tabletop/chess_pieces.rsi
    state: b_knight

- type: entity
  parent: BaseLargeTabletopPiece
  id: LargeBlackPawn
  name: black pawn
  description: The black pawn, it moves one tile toward the opposing side of the board, but can move two if it has not moved yet in the game. It cannot take a piece by moving straight into it like the other pieces, but has to be diagonally adjacent. If it reaches the opposite side of the board, it can be promoted to a knight, bishop, rook or queen. Worth 1 point. # contemplated explaining en passant but thats a bit far imo
  components:
  - type: Sprite
    sprite: Objects/Fun/Tabletop/chess_pieces.rsi
    state: b_pawn
  - type: Stack
    stackType: LargeBlackPawn

# Checkers

- type: entity
  parent: BaseLargeTabletopPiece
  id: LargeWhiteChecker
  name: white checker
  description: Can move diagonally toward the opponents side. If there is an enemy piece diagonally and an empty space on the other side of it then this piece can jump over and take the other piece in the process. Jumps can be chained. If a piece gets to the other side of the board, it is promoted to a king piece.
  components:
  - type: Sprite
    sprite: Objects/Fun/Tabletop/checker_pieces.rsi
    state: w_checker_piece
  - type: Stack
    stackType: LargeWhiteChecker

- type: entity
  parent: BaseLargeTabletopPiece
  id: LargeWhiteCheckerKing
  name: white checker king
  description: Can move diagonally, forwards or back. If there is an enemy piece diagonally and an empty space on the other side of it then this piece can jump over and take the other piece in the process. Jumps can be chained.
  components:
  - type: Sprite
    sprite: Objects/Fun/Tabletop/checker_pieces.rsi
    state: w_checker_crown
  - type: Stack
    stackType: LargeWhiteCheckerKing

- type: entity
  parent: BaseLargeTabletopPiece
  id: LargeBlackChecker
  name: black checker
  description: Can move diagonally toward the opponents side. If there is an enemy piece diagonally and an empty space on the other side of it then this piece can jump over and take the other piece in the process. Jumps can be chained. If a piece gets to the other side of the board, it is promoted to a king piece.
  components:
  - type: Sprite
    sprite: Objects/Fun/Tabletop/checker_pieces.rsi
    state: b_checker_piece
  - type: Stack
    stackType: LargeBlackChecker

- type: entity
  parent: BaseLargeTabletopPiece
  id: LargeBlackCheckerKing
  name: black checker king
  description: Can move diagonally, forwards or back. If there is an enemy piece diagonally and an empty space on the other side of it then this piece can jump over and take the other piece in the process. Jumps can be chained.
  components:
  - type: Sprite
    sprite: Objects/Fun/Tabletop/checker_pieces.rsi
    state: b_checker_crown
  - type: Stack
    stackType: LargeBlackCheckerKing

# Stacks

- type: entity
  parent: LargeWhitePawn
  id: LargeWhitePawn8
  suffix: Large, 8
  components:
  - type: Stack
    count: 8

- type: entity
  parent: LargeBlackPawn
  id: LargeBlackPawn8
  suffix: Large, 8
  components:
  - type: Stack
    count: 8

- type: entity
  parent: LargeBlackChecker
  id: LargeBlackChecker12
  suffix: Large, 12
  components:
  - type: Stack
    count: 12

- type: entity
  parent: LargeBlackCheckerKing
  id: LargeBlackCheckerKing12
  suffix: Large, 12
  components:
  - type: Stack
    count: 12

- type: entity
  parent: LargeWhiteChecker
  id: LargeWhiteChecker12
  suffix: Large, 12
  components:
  - type: Stack
    count: 12

- type: entity
  parent: LargeWhiteCheckerKing
  id: LargeWhiteCheckerKing12
  suffix: Large, 12
  components:
  - type: Stack
    count: 12
