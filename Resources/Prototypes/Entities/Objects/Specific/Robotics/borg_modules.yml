- type: entity
  id: BaseBorgModule
  parent: BaseItem
  name: borg module
  description: A piece of tech that gives cyborgs new abilities.
  abstract: true
  components:
  - type: Item
    storedRotation: -90
    inhandVisuals:
      left:
      - state: base-icon-inhand-left
        color: "#8FCBCB"
      - state: base-module-inhand-left
        color: "#A1A1A1"
      - state: base-part-inhand-left
      - state: base-stripes-inhand-left
        color: "#7D7D7D"
      right:
      - state: base-icon-inhand-right
        color: "#8FCBCB"
      - state: base-module-inhand-right
        color: "#A1A1A1"
      - state: base-part-inhand-right
      - state: base-stripes-inhand-right
        color: "#7D7D7D"
  - type: Sprite
    sprite: Objects/Specific/Robotics/borgmodule.rsi
  - type: BorgModule
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: no-action }
  - type: StaticPrice
    price: 100
  - type: Tag
    tags:
    - BorgModuleGeneric
  - type: GuideHelp
    guides:
    - Cyborgs
    - Robotics

- type: entity
  id: BaseProviderBorgModule
  abstract: true
  components:
  - type: SelectableBorgModule
  - type: ContainerContainer
    containers:
      holding_container: !type:Container { }

- type: entity
  parent: BaseAction
  id: ActionBorgSwapModule
  name: Swap Module
  description: Select this module, enabling you to use the tools it provides.
  components:
  - type: Action
    itemIconStyle: BigAction
    useDelay: 0.5
  - type: InstantAction
    event: !type:BorgModuleActionSelectedEvent

- type: entity
  id: BaseBorgModuleCargo
  parent: BaseBorgModule
  abstract: true
  components:
  - type: Tag
    tags:
    - BorgModuleCargo
  - type: Item
    inhandVisuals:
      left:
      - state: base-icon-inhand-left
        color: "#EBD8B7"
      - state: base-module-inhand-left
        color: "#613D1D"
      - state: base-stripes-inhand-left
        color: "#593718"
      right:
      - state: base-icon-inhand-right
        color: "#EBD8B7"
      - state: base-module-inhand-right
        color: "#613D1D"
      - state: base-stripes-inhand-right
        color: "#593718"

- type: entity
  id: BaseBorgModuleEngineering
  parent: BaseBorgModule
  abstract: true
  components:
  - type: Tag
    tags:
    - BorgModuleEngineering
  - type: Item
    inhandVisuals:
      left:
      - state: base-icon-inhand-left
        color: "#8FCBCB"
      - state: base-module-inhand-left
        color: "#BA3939"
      - state: base-part-inhand-left
      - state: base-stripes-inhand-left
        color: "#DEC343"
      right:
      - state: base-icon-inhand-right
        color: "#8FCBCB"
      - state: base-module-inhand-right
        color: "#BA3939"
      - state: base-part-inhand-right
      - state: base-stripes-inhand-right
        color: "#DEC343"

- type: entity
  id: BaseBorgModuleJanitor
  parent: BaseBorgModule
  abstract: true
  components:
  - type: Tag
    tags:
    - BorgModuleJanitor
  - type: Item
    inhandVisuals:
      left:
      - state: base-icon-inhand-left
        color: "#CFA2E4"
      - state: base-module-inhand-left
        color: "#753186"
      - state: base-part-inhand-left
      - state: base-stripes-inhand-left
        color: "#404040"
      right:
      - state: base-icon-inhand-right
        color: "#CFA2E4"
      - state: base-module-inhand-right
        color: "#753186"
      - state: base-part-inhand-right
      - state: base-stripes-inhand-right
        color: "#404040"

- type: entity
  id: BaseBorgModuleMedical
  parent: BaseBorgModule
  abstract: true
  components:
  - type: Tag
    tags:
    - BorgModuleMedical
  - type: Item
    inhandVisuals:
      left:
      - state: base-icon-inhand-left
        color: "#EEF5F5"
      - state: base-module-inhand-left
        color: "#5A96BB"
      - state: base-part-inhand-left
      - state: base-stripes-inhand-left
        color: "#C3C3C3"
      right:
      - state: base-icon-inhand-right
        color: "#EEF5F5"
      - state: base-module-inhand-right
        color: "#5A96BB"
      - state: base-part-inhand-right
      - state: base-stripes-inhand-right
        color: "#C3C3C3"

- type: entity
  id: BaseBorgModuleScience
  parent: BaseBorgModule
  abstract: true
  components:
  - type: Tag
    tags:
    - BorgModuleScience
  - type: Item
    inhandVisuals:
      left:
      - state: base-icon-inhand-left
        color: "#FFAEB6"
      - state: base-module-inhand-left
        color: "#9C0DE1"
      - state: base-part-inhand-left
      - state: base-stripes-inhand-left
        color: "#C3C3C3"
      right:
      - state: base-icon-inhand-right
        color: "#FFAEB6"
      - state: base-module-inhand-right
        color: "#9C0DE1"
      - state: base-part-inhand-right
      - state: base-stripes-inhand-right
        color: "#C3C3C3"

- type: entity
  id: BaseBorgModuleService
  parent: BaseBorgModule
  abstract: true
  components:
  - type: Tag
    tags:
    - BorgModuleService
  - type: Item
    inhandVisuals:
      left:
      - state: base-icon-inhand-left
        color: "#F3F3F3"
      - state: base-module-inhand-left
        color: "#3A3A3A"
      - state: base-part-inhand-left
      - state: base-stripes-inhand-left
        color: "#313131"
      right:
      - state: base-icon-inhand-right
        color: "#F3F3F3"
      - state: base-module-inhand-right
        color: "#3A3A3A"
      - state: base-part-inhand-right
      - state: base-stripes-inhand-right
        color: "#313131"

- type: entity
  id: BaseBorgModuleSyndicate
  parent: BaseBorgModule
  abstract: true
  components:
  - type: Tag
    tags:
    - BorgModuleSyndicate
  - type: Item
    inhandVisuals:
      left:
      - state: base-icon-inhand-left
        color: "#FF0000"
      - state: base-module-inhand-left
        color: "#891417"
      - state: base-part-inhand-left
      - state: base-stripes-inhand-left
        color: "#7B0F12"
      right:
      - state: base-icon-inhand-right
        color: "#FF0000"
      - state: base-module-inhand-right
        color: "#891417"
      - state: base-part-inhand-right
      - state: base-stripes-inhand-right
        color: "#7B0F12"


- type: entity
  id: BaseBorgModuleSyndicateAssault
  parent: BaseBorgModule
  abstract: true
  components:
  - type: Tag
    tags:
    - BorgModuleSyndicateAssault
  - type: Item
    inhandVisuals:
      left:
      - state: base-icon-inhand-left
        color: "#FF0000"
      - state: base-module-inhand-left
        color: "#891417"
      - state: base-part-inhand-left
      - state: base-stripes-inhand-left
        color: "#7B0F12"
      right:
      - state: base-icon-inhand-right
        color: "#FF0000"
      - state: base-module-inhand-right
        color: "#891417"
      - state: base-part-inhand-right
      - state: base-stripes-inhand-right
        color: "#7B0F12"

- type: entity
  abstract: true
  parent: BaseBorgModule
  id: BaseXenoborgModuleGeneric
  components:
  - type: Tag
    tags:
    - XenoborgModuleGeneric
  - type: Item
    inhandVisuals:
      left:
      - state: base-icon-inhand-left
        color: "#6E9EE0"
      - state: base-module-inhand-left
        color: "#337dd6"
      - state: base-part-inhand-left
      - state: base-stripes-inhand-left
        color: "#337dd6"
      right:
      - state: base-icon-inhand-right
        color: "#6E9EE0"
      - state: base-module-inhand-right
        color: "#337dd6"
      - state: base-part-inhand-right
      - state: base-stripes-inhand-right
        color: "#337dd6"

- type: entity
  abstract: true
  parent: BaseBorgModule
  id: BaseXenoborgModuleEngi
  components:
  - type: Tag
    tags:
    - XenoborgModuleEngi
  - type: Item
    inhandVisuals:
      left:
      - state: base-icon-inhand-left
        color: "#6E9EE0"
      - state: base-module-inhand-left
        color: "#337dd6"
      - state: base-part-inhand-left
      - state: base-stripes-inhand-left
        color: "#EDB45B"
      right:
      - state: base-icon-inhand-right
        color: "#6E9EE0"
      - state: base-module-inhand-right
        color: "#337dd6"
      - state: base-part-inhand-right
      - state: base-stripes-inhand-right
        color: "#EDB45B"

- type: entity
  parent: BaseBorgModule
  id: BaseXenoborgModuleHeavy
  abstract: true
  components:
  - type: Tag
    tags:
    - XenoborgModuleHeavy
  - type: Item
    inhandVisuals:
      left:
      - state: base-icon-inhand-left
        color: "#6E9EE0"
      - state: base-module-inhand-left
        color: "#337dd6"
      - state: base-part-inhand-left
      - state: base-stripes-inhand-left
        color: "#962023"
      right:
      - state: base-icon-inhand-right
        color: "#6E9EE0"
      - state: base-module-inhand-right
        color: "#337dd6"
      - state: base-part-inhand-right
      - state: base-stripes-inhand-right
        color: "#962023"

- type: entity
  parent: BaseBorgModule
  id: BaseXenoborgModuleScout
  abstract: true
  components:
  - type: Tag
    tags:
    - XenoborgModuleScout
  - type: Item
    inhandVisuals:
      left:
      - state: base-icon-inhand-left
        color: "#6E9EE0"
      - state: base-module-inhand-left
        color: "#337dd6"
      - state: base-part-inhand-left
      - state: base-stripes-inhand-left
        color: "#282828"
      right:
      - state: base-icon-inhand-right
        color: "#6E9EE0"
      - state: base-module-inhand-right
        color: "#337dd6"
      - state: base-part-inhand-right
      - state: base-stripes-inhand-right
        color: "#282828"

- type: entity
  parent: BaseBorgModule
  id: BaseXenoborgModuleStealth
  abstract: true
  components:
  - type: Tag
    tags:
    - XenoborgModuleStealth
  - type: Item
    inhandVisuals:
      left:
      - state: base-icon-inhand-left
        color: "#6E9EE0"
      - state: base-module-inhand-left
        color: "#337dd6"
      - state: base-part-inhand-left
      - state: base-stripes-inhand-left
        color: "#FF00CC"
      right:
      - state: base-icon-inhand-right
        color: "#6E9EE0"
      - state: base-module-inhand-right
        color: "#337dd6"
      - state: base-part-inhand-right
      - state: base-stripes-inhand-right
        color: "#FF00CC"

# generic modules
- type: entity
  id: BorgModuleCable
  parent: [ BaseBorgModule, BaseProviderBorgModule ]
  name: cable cyborg module
  description: A universal cyborg module which allows the unit to install and manipulate electrical systems.
  components:
  - type: Sprite
    layers:
    - state: generic
    - state: icon-cables
  - type: ItemBorgModule
    hands:
    - item: CableApcStack10
      hand:
        emptyRepresentative: CableApcStack10
        emptyLabel: borg-slot-cables-empty
        whitelist:
          tags:
          - CableCoil
    - item: CableMVStack10
      hand:
        emptyRepresentative: CableMVStack10
        emptyLabel: borg-slot-cables-empty
        whitelist:
          tags:
          - CableCoil
    - item: CableHVStack10
      hand:
        emptyRepresentative: CableHVStack10
        emptyLabel: borg-slot-cables-empty
        whitelist:
          tags:
          - CableCoil
    - item: Wirecutter
    - item: Crowbar
    - item: trayScanner
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: wire-module }

- type: entity
  id: BorgModuleFireExtinguisher
  parent: [ BaseBorgModule, BaseProviderBorgModule ]
  name: thruster cyborg module
  description: NT assigned a team to design a jetpack for cyborg units, but they ran out of funding and just made a bigger fire extinguisher. It comes with a integrated GPS and mass scanner though!
  components:
  - type: Sprite
    layers:
    - state: generic
    - state: icon-fire-extinguisher
  - type: ItemBorgModule
    hands:
    - item: BorgFireExtinguisher
    - item: BorgHandheldGPSBasic
    - item: HandheldStationMapUnpowered
    - item: HandHeldMassScannerBorg
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: extinguisher-module }

- type: entity
  id: BorgModuleTool
  parent: [ BaseBorgModule, BaseProviderBorgModule ]
  name: tool cyborg module
  components:
  - type: Sprite
    layers:
    - state: generic
    - state: icon-tools
  - type: ItemBorgModule
    hands:
    - item: Crowbar
    - item: Wrench
    - item: Screwdriver
    - item: Wirecutter
    - item: WelderIndustrial
    - item: Multitool
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: tool-module }

# cargo modules
- type: entity
  id: BorgModuleAppraisal
  parent: [ BaseBorgModuleCargo, BaseProviderBorgModule ]
  name: appraisal cyborg module
  components:
  - type: Sprite
    layers:
    - state: cargo
    - state: icon-appraisal
  - type: ItemBorgModule
    hands:
    - item: AppraisalTool
    - item: Pen
    - item: HandLabeler
    - item: RubberStampApproved
    - item: RubberStampDenied
    - item: RadioHandheld
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: appraisal-module }

- type: entity
  id: BorgModuleMining
  parent: [ BaseBorgModuleCargo, BaseProviderBorgModule ]
  name: mining cyborg module
  components:
  - type: Sprite
    layers:
    - state: cargo
    - state: icon-mining
  - type: ItemBorgModule
    hands:
    - item: MiningDrill
    - item: Shovel
    - item: MineralScannerUnpowered
    - item: BorgOreBag
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: mining-module }

- type: entity
  id: BorgModuleAdvancedMining
  parent: [ BaseBorgModuleCargo, BaseProviderBorgModule ]
  name: advanced mining cyborg module
  description: Advanced cargo module containing advanced mining equipment. Studies show it advances productivity of a cyborg by 150%.
  components:
  - type: Sprite
    layers:
    - state: cargo
    - state: icon-mining-adv
  - type: ItemBorgModule
    hands:
    - item: MiningDrillDiamond
    - item: Shovel
    - item: AdvancedMineralScannerUnpowered
    - item: OreBagOfHolding
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: adv-mining-module }

- type: entity
  id: BorgModuleTraversal
  parent: [ BaseBorgModuleCargo, BaseProviderBorgModule ]
  name: traversal cyborg module
  components:
  - type: Sprite
    layers:
    - state: cargo
    - state: icon-grappling-gun
  - type: ItemBorgModule
    hands:
    - item: WeaponGrapplingGun
    - item: BorgFireExtinguisher
    - item: BorgHandheldGPSBasic
    - item: HandHeldMassScannerBorg
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: grappling-module }

# engineering modules
- type: entity
  id: BorgModuleAdvancedTool
  parent: [ BaseBorgModuleEngineering, BaseProviderBorgModule ]
  name: advanced tool cyborg module
  description: Advanced engineering module containing cutting-edge tools.
  components:
  - type: Sprite
    layers:
    - state: engineering
    - state: icon-tools-adv
  - type: ItemBorgModule
    hands:
    - item: JawsOfLife
    - item: PowerDrill
    - item: WelderExperimental
    - item: Multitool
    - item: RemoteSignallerAdvanced
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: adv-tools-module }

- type: entity
  id: BorgModuleConstructionMaterialPlaceholder
  parent: BaseItem
  components:
  - type: Sprite
    sprite: Objects/Materials/Sheets/other.rsi
    state: generic_materials

- type: entity
  id: BorgModuleConstruction
  parent: [ BaseBorgModuleEngineering, BaseProviderBorgModule ]
  name: construction cyborg module
  components:
  - type: Sprite
    layers:
    - state: engineering
    - state: icon-construction
  - type: ItemBorgModule
    hands:
    - hand:
        emptyRepresentative: BorgModuleConstructionMaterialPlaceholder
        emptyLabel: borg-slot-construction-empty
        whitelist:
          tags:
          - ConstructionMaterial
    - hand:
        emptyRepresentative: BorgModuleConstructionMaterialPlaceholder
        emptyLabel: borg-slot-construction-empty
        whitelist:
          tags:
          - ConstructionMaterial
    - hand:
        emptyRepresentative: BorgModuleConstructionMaterialPlaceholder
        emptyLabel: borg-slot-construction-empty
        whitelist:
          tags:
          - ConstructionMaterial
    - hand:
        emptyRepresentative: DoorElectronics
        emptyLabel: borg-slot-circuitboards-empty
        whitelist:
          components:
          - Circuitboard
    - hand:
        emptyRepresentative: MicroManipulatorStockPart
        emptyLabel: borg-slot-construction-empty
        whitelist:
          tags:
          - ConstructionMaterial
    - hand:
        emptyRepresentative: SpaceHeaterFlatpack
        emptyLabel: borg-slot-flatpacks-empty
        whitelist:
          components:
          - Flatpack
    - hand:
        emptyRepresentative: FloorTileItemSteel
        emptyLabel: borg-slot-tiles-empty
        whitelist:
          components:
          - FloorTile
    - hand:
        emptyRepresentative: FloorTileItemWhite
        emptyLabel: borg-slot-tiles-empty
        whitelist:
          components:
          - FloorTile
    - hand:
        emptyRepresentative: FloorTileItemDark
        emptyLabel: borg-slot-tiles-empty
        whitelist:
          components:
          - FloorTile
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: construction-module }

- type: entity
  id: BorgModuleRCD
  parent: [ BaseBorgModuleEngineering, BaseProviderBorgModule ]
  name: engineering cyborg module
  components:
  - type: Sprite
    layers:
    - state: engineering
    - state: icon-rcd
  - type: ItemBorgModule
    hands:
    - item: RCDRecharging
    - item: BorgFireExtinguisher
    - item: BorgHandheldGPSBasic
    - item: GasAnalyzer
    - item: HolofanProjectorBorg
    - item: GeigerCounter
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: rcd-module }

# janitorial modules (this gets its own unique things because janis are epic)
- type: entity
  id: BorgModuleCustodial
  parent: [ BaseBorgModuleJanitor, BaseProviderBorgModule ]
  name: custodial cyborg module
  components:
  - type: Sprite
    layers:
    - state: janitor
    - state: icon-light-replacer
  - type: ItemBorgModule
    hands:
    - item: LightReplacer
    - item: BorgTrashBag
    - item: Plunger
    - item: SoapNT
      hand:
        emptyLabel: borg-slot-soap-empty
        emptyRepresentative: SoapNT
        whitelist:
          tags:
          - Soap
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: light-replacer-module }

- type: entity
  id: BorgModuleCleaning
  parent: [ BaseBorgModuleJanitor, BaseProviderBorgModule ]
  name: cleaning cyborg module
  components:
  - type: Sprite
    layers:
    - state: janitor
    - state: icon-mop
  - type: ItemBorgModule
    hands:
    - item: MopItem
    - item: BorgBucket
    - item: BorgSprayBottle
    - item: HoloprojectorBorg
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: cleaning-module }

- type: entity
  id: BorgModuleAdvancedCleaning
  parent: [ BaseBorgModuleJanitor, BaseProviderBorgModule ]
  name: advanced cleaning cyborg module
  description: Advanced janitorial module containing, well... advanced janitor equipment. What were you expecting?
  components:
  - type: Sprite
    layers:
    - state: janitor
    - state: icon-mop-adv
  - type: ItemBorgModule
    hands:
    - item: AdvMopItem
    - item: BorgMegaSprayBottle
    - item: HoloprojectorBorg
    - item: BorgDropper
    - item: Beaker
      hand:
        emptyLabel: borg-slot-beakers-empty
        emptyRepresentative: Beaker
        whitelist:
          tags:
          - GlassBeaker
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: adv-cleaning-module }

# medical modules
- type: entity
  id: BorgModuleDiagnosis # todo: reuse when med refractor is finished
  parent: [ BaseBorgModuleMedical, BaseProviderBorgModule ]
  name: diagnosis cyborg module
  components:
  - type: Sprite
    layers:
    - state: medical
    - state: icon-diagnosis
  - type: ItemBorgModule
    hands:
    - item: HandheldHealthAnalyzerUnpowered
    - item: ClothingNeckStethoscope
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: diagnosis-module }

- type: entity
  id: BorgModuleTopicals
  parent: [ BaseBorgModuleMedical, BaseProviderBorgModule ]
  name: topicals cyborg module
  components:
  - type: Sprite
    layers:
    - state: medical
    - state: icon-treatment
  - type: ItemBorgModule
    hands:
    - item: HandheldHealthAnalyzerUnpowered
    - item: Gauze
      hand:
        emptyLabel: borg-slot-topicals-empty
        emptyRepresentative: Gauze
        whitelist:
          components:
          - Healing
    - item: Brutepack
      hand:
        emptyLabel: borg-slot-topicals-empty
        emptyRepresentative: Brutepack
        whitelist:
          components:
          - Healing
    - item: Ointment
      hand:
        emptyLabel: borg-slot-topicals-empty
        emptyRepresentative: Ointment
        whitelist:
          components:
          - Healing
    - item: Bloodpack
      hand:
        emptyLabel: borg-slot-topicals-empty
        emptyRepresentative: Bloodpack
        whitelist:
          components:
          - Healing
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: treatment-module }

- type: entity
  id: BorgModuleRescue
  parent: [ BaseBorgModuleMedical, BaseProviderBorgModule ]
  name: rescue cyborg module
  components:
  - type: Sprite
    layers:
    - state: medical
    - state: icon-defib
  - type: ItemBorgModule
    hands:
    - item: HandheldHealthAnalyzerUnpowered
    - item: DefibrillatorOneHandedUnpowered
    - item: BorgFireExtinguisher
    - item: BorgHandheldGPSBasic
    - item: HandLabeler
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: defib-module }

- type: entity
  id: BorgModuleChemical
  parent: [ BaseBorgModuleMedical, BaseProviderBorgModule ]
  name: chemical cyborg module
  components:
  - type: Sprite
    layers:
    - state: medical
    - state: icon-chem
  - type: ItemBorgModule
    hands:
    - item: HandheldHealthAnalyzerUnpowered
    - item: Syringe
    - item: BorgDropper
    - item: BaseChemistryEmptyVial
      hand:
        emptyLabel: borg-slot-small-containers-empty
        emptyRepresentative: BaseChemistryEmptyVial
        whitelist:
          components:
          - FitsInDispenser
    - item: BaseChemistryEmptyVial
      hand:
        emptyLabel: borg-slot-small-containers-empty
        emptyRepresentative: BaseChemistryEmptyVial
        whitelist:
          components:
          - FitsInDispenser
    - item: BaseChemistryEmptyVial
      hand:
        emptyLabel: borg-slot-small-containers-empty
        emptyRepresentative: BaseChemistryEmptyVial
        whitelist:
          components:
          - FitsInDispenser
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: chem-module }

- type: entity
  id: BorgModuleAdvancedChemical
  parent: [ BaseBorgModuleMedical, BaseProviderBorgModule ]
  name: advanced chemical cyborg module
  description: Advanced medical module containing the cyborg adaptation of the highly coveted hypospray. Now your cyborgs can inject crew-harmers with chloral hydrate even faster!
  components:
  - type: Sprite
    layers:
    - state: medical
    - state: icon-chemist
  - type: ItemBorgModule
    hands:
    - item: HandheldHealthAnalyzerUnpowered
    - item: BorgHypo
    - item: Syringe
    - item: BorgDropper
    - item: Beaker
      hand:
        emptyLabel: borg-slot-chemical-containers-empty
        emptyRepresentative: Beaker
        whitelist:
          components:
          - FitsInDispenser
          tags:
          - ChemDispensable
    - item: Beaker
      hand:
        emptyLabel: borg-slot-chemical-containers-empty
        emptyRepresentative: Beaker
        whitelist:
          components:
          - FitsInDispenser
          tags:
          - ChemDispensable
    - item: Beaker
      hand:
        emptyLabel: borg-slot-chemical-containers-empty
        emptyRepresentative: Beaker
        whitelist:
          components:
          - FitsInDispenser
          tags:
          - ChemDispensable
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: adv-chem-module }

# science modules
# todo: if science ever gets their own custom robot, add more "sci" modules.
- type: entity
  id: BorgModuleArtifact
  parent: [ BaseBorgModuleScience, BaseProviderBorgModule ]
  name: artifact cyborg module
  components:
  - type: Sprite
    layers:
    - state: science
    - state: icon-artifacts
  - type: ItemBorgModule
    hands:
    - item: NodeScanner
    - item: SprayBottle
    - item: GasAnalyzer
    - item: BorgDropper
    - item: BaseChemistryEmptyVial
      hand:
        emptyLabel: borg-slot-small-containers-empty
        emptyRepresentative: BaseChemistryEmptyVial
        whitelist:
          components:
          - FitsInDispenser
    - item: GeigerCounter
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: node-scanner-module }

- type: entity
  id: BorgModuleAnomaly
  parent: [ BaseBorgModuleScience, BaseProviderBorgModule ]
  name: anomaly cyborg module
  components:
  - type: Sprite
    layers:
    - state: science
    - state: icon-anomalies
  - type: ItemBorgModule
    hands:
    - item: AnomalyScanner
    - item: AnomalyLocatorUnpowered
    - item: AnomalyLocatorWideUnpowered
    - item: HandLabeler
    - hand:
        emptyRepresentative: SheetRGlass
        emptyLabel: borg-slot-construction-empty
        whitelist:
          tags:
          - ConstructionMaterial
    - hand:
        emptyRepresentative: SheetRPGlass
        emptyLabel: borg-slot-construction-empty
        whitelist:
          tags:
          - ConstructionMaterial
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: anomaly-module }

# service modules
- type: entity
  id: BorgModuleService
  parent: [ BaseBorgModuleService, BaseProviderBorgModule ]
  name: service cyborg module
  components:
  - type: Sprite
    layers:
    - state: service
    - state: icon-pen
  - type: ItemBorgModule
    hands:
    - item: Pen
    - item: BooksBag
    - hand:
        emptyLabel: borg-slot-documents-empty
        emptyRepresentative: BookBase
        whitelist:
          tags:
          - Book
          - Dice
          - Document
          - Figurine
          - TabletopBoard
          - Write
    - hand:
        emptyLabel: borg-slot-documents-empty
        emptyRepresentative: Paper
        whitelist:
          tags:
          - Book
          - Dice
          - Document
          - Figurine
          - TabletopBoard
          - Write
    - item: HandLabeler
    - item: RubberStampApproved
    - item: RubberStampDenied
    - item: BorgDropper
    - item: DrinkShaker
      hand:
        emptyLabel: borg-slot-small-containers-empty
        emptyRepresentative: DrinkShaker
        whitelist:
          components:
          - FitsInDispenser
    - item: BarSpoon
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: service-module }

- type: entity
  id: BorgModuleMusique
  parent: [ BaseBorgModuleService, BaseProviderBorgModule ]
  name: musique cyborg module
  components:
  - type: Sprite
    layers:
    - state: service
    - state: icon-musique
  - type: ItemBorgModule
    hands:
    - item: SynthesizerInstrument
      hand:
        emptyLabel: borg-slot-instruments-empty
        emptyRepresentative: SynthesizerInstrument
        whitelist:
          components:
          - Instrument
    - item: ElectricGuitarInstrument
      hand:
        emptyLabel: borg-slot-instruments-empty
        emptyRepresentative: ElectricGuitarInstrument
        whitelist:
          components:
          - Instrument
    - item: SaxophoneInstrument
      hand:
        emptyLabel: borg-slot-instruments-empty
        emptyRepresentative: SaxophoneInstrument
        whitelist:
          components:
          - Instrument
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: musical-module }

- type: entity
  id: BorgModuleGardening
  parent: [ BaseBorgModuleService, BaseProviderBorgModule ]
  name: gardening cyborg module
  components:
  - type: Sprite
    layers:
    - state: service
    - state: icon-gardening
  - type: ItemBorgModule
    hands:
    - item: HydroponicsToolMiniHoe
    - item: HydroponicsToolSpade
    - item: HydroponicsToolClippers
    - item: Bucket
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: gardening-module }

- type: entity
  id: BorgModuleHarvesting
  parent: [ BaseBorgModuleService, BaseProviderBorgModule ]
  name: harvesting cyborg module
  components:
  - type: Sprite
    layers:
    - state: service
    - state: icon-harvesting
  - type: ItemBorgModule
    hands:
    - item: HydroponicsToolScythe
    - item: HydroponicsToolHatchet
    - item: PlantBag
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: harvesting-module }

- type: entity
  id: BorgModuleClowning
  parent: [ BaseBorgModuleService, BaseProviderBorgModule ]
  name: clowning cyborg module
  components:
  - type: Sprite
    layers:
    - state: service
    - state: icon-clown
  - type: ItemBorgModule
    hands:
    - item: BikeHorn
    - item: ClownRecorder
    - item: BikeHornInstrument
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: clowning-module }

- type: entity
  id: BorgModuleAdvancedClowning
  parent: [ BaseBorgModuleService, BaseProviderBorgModule ]
  name: advanced clowning cyborg module
  description: Advanced service module for only the silliest cyborgs! Comes with a built-in oven that bakes pies automatically over time, a holopeel projector, and a push horn.
  components:
  - type: Sprite
    layers:
    - state: service
    - state: icon-clown-adv
  - type: ItemBorgModule
    hands:
    - item: HoloprojectorClownBorg
    - item: BorgLauncherCreamPie
    - item: ClownRecorder
    - item: PushHorn
    - item: BikeHornInstrument
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: adv-clowning-module }

#syndicate modules
- type: entity
  id: BorgModuleSyndicateWeapon
  parent: [ BaseBorgModule, BaseProviderBorgModule, BaseSyndicateContraband ]
  name: weapon cyborg module
  components:
  - type: Sprite
    layers:
    - state: syndicate
    - state: icon-syndicate
  - type: ItemBorgModule
    hands:
    - item: WeaponPistolEchis
    - item: EnergyDaggerLoud
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: syndicate-weapon-module }
  - type: Item
    inhandVisuals:
      left:
      - state: base-icon-inhand-left
        color: "#FF0000"
      - state: base-module-inhand-left
        color: "#891417"
      - state: base-part-inhand-left
      - state: base-stripes-inhand-left
        color: "#7B0F12"
      right:
      - state: base-icon-inhand-right
        color: "#FF0000"
      - state: base-module-inhand-right
        color: "#891417"
      - state: base-part-inhand-right
      - state: base-stripes-inhand-right
        color: "#7B0F12"
  - type: StaticPrice
    price: 2500

- type: entity
  id: BorgModuleOperative
  parent: [ BaseBorgModuleSyndicate, BaseProviderBorgModule, BaseSyndicateContraband ]
  name: operative cyborg module
  description: A module that comes with a crowbar, an Emag, an Access Breaker and a syndicate pinpointer.
  components:
    - type: Sprite
      layers:
      - state: syndicate
      - state: icon-syndicate
    - type: ItemBorgModule
      hands:
      - item: Crowbar
      - item: Emag
      - item: AccessBreaker
      - item: PinpointerSyndicateNuclear
    - type: BorgModuleIcon
      icon: { sprite: Interface/Actions/actions_borg.rsi, state: syndicate-operative-module }

- type: entity
  id: BorgModuleEsword
  parent: [ BaseBorgModuleSyndicate, BaseProviderBorgModule, BaseSyndicateContraband ]
  name: energy sword cyborg module
  description: A module that comes with a double energy sword.
  components:
    - type: Sprite
      layers:
      - state: syndicate
      - state: icon-syndicate
    - type: ItemBorgModule
      hands:
      - item: CyborgEnergySwordDouble
      - item: PinpointerSyndicateNuclear
    - type: BorgModuleIcon
      icon: { sprite: Interface/Actions/actions_borg.rsi, state: syndicate-esword-module }

- type: entity
  id: BorgModuleL6C
  parent: [ BaseBorgModuleSyndicateAssault, BaseProviderBorgModule, BaseSyndicateContraband ]
  name: L6C ROW cyborg module
  description: A module that comes with a L6C.
  components:
    - type: Sprite
      layers:
      - state: syndicate
      - state: icon-syndicate
    - type: ItemBorgModule
      hands:
      - item: WeaponLightMachineGunL6C
      - item: PinpointerSyndicateNuclear
    - type: BorgModuleIcon
      icon: { sprite: Interface/Actions/actions_borg.rsi, state: syndicate-l6c-module }

- type: entity
  id: BorgModuleMartyr
  parent: [ BaseBorgModule, BaseProviderBorgModule, BaseSyndicateContraband ]
  name: martyr cyborg module
  description: "A module that comes with an explosive you probably don't want to handle yourself."
  components:
    - type: Sprite
      layers:
        - state: syndicateborgbomb
        - state: icon-bomb
    - type: ItemBorgModule
      hands:
      - item: SelfDestructSeq
    - type: BorgModuleIcon
      icon: { sprite: Interface/Actions/actions_borg.rsi, state: syndicate-martyr-module }
    - type: Item
      inhandVisuals:
        left:
        - state: base-icon-inhand-left
          color: "#FF0000"
        - state: base-module-inhand-left
          color: "#891417"
        - state: base-part-inhand-left
        - state: base-stripes-inhand-left
          color: "#7B0F12"
        right:
        - state: base-icon-inhand-right
          color: "#FF0000"
        - state: base-module-inhand-right
          color: "#891417"
        - state: base-part-inhand-right
        - state: base-stripes-inhand-right
          color: "#7B0F12"
    - type: StaticPrice
      price: 2000

# xenoborg modules
- type: entity
  parent: [ BaseXenoborgModuleGeneric, BaseProviderBorgModule, BaseXenoborgContraband ]
  id: XenoborgModuleBasic
  name: basic xenoborg module
  description: Essential items for any Xenoborg.
  components:
  - type: Sprite
    layers:
    - state: xenoborg_generic
    - state: icon-xenoborg-basic
  - type: ItemBorgModule
    hands:
    - item: MaterialBag
    - item: PinpointerMothership
    - item: HandheldGPSBasic
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: xenoborg-basic-module }

- type: entity
  parent: [ BaseXenoborgModuleGeneric, BaseProviderBorgModule, BaseXenoborgContraband ]
  id: XenoborgModuleTool
  name: tool xenoborg module
  description: Simple tools for most Xenoborgs.
  components:
  - type: Sprite
    layers:
    - state: xenoborg_generic
    - state: icon-xenoborg-tools
  - type: ItemBorgModule
    hands:
    - item: Crowbar
    - item: Wrench
    - item: Screwdriver
    - item: Wirecutter
    - item: Multitool
    - item: RefuelingWelder
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: xenoborg-tool-module }

- type: entity
  parent: [ BaseXenoborgModuleEngi, BaseProviderBorgModule, BaseXenoborgContraband ]
  id: XenoborgModuleAccessBreaker
  name: access breaker xenoborg module
  description: Module with a access breaker.
  components:
  - type: Sprite
    layers:
    - state: xenoborg_engi
    - state: icon-xenoborg-access-breaker
  - type: ItemBorgModule
    hands:
    - item: AccessBreaker
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: xenoborg-access-breaker-module }

- type: entity
  parent: [ BaseXenoborgModuleEngi, BaseProviderBorgModule, BaseXenoborgContraband ]
  id: XenoborgModuleFireExtinguisher
  name: fire extinguisher xenoborg module
  description: Module with a self-refueling fire extinguisher.
  components:
  - type: Sprite
    layers:
    - state: xenoborg_engi
    - state: icon-xenoborg-fire-extinguisher
  - type: ItemBorgModule
    hands:
    - item: SelfRechargingFireExtinguisher
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: xenoborg-extinguisher-module }

- type: entity
  parent: [ BaseXenoborgModuleHeavy, BaseProviderBorgModule, BaseXenoborgContraband ]
  id: XenoborgModuleJammer
  name: jammer xenoborg module
  description: Module with a communication jammer.
  components:
  - type: Sprite
    layers:
    - state: xenoborg_heavy
    - state: icon-xenoborg-jammer
  - type: ItemBorgModule
    hands:
    - item: XenoborgRadioJammer
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: xenoborg-jammer-module }

- type: entity
  parent: [ BaseXenoborgModuleHeavy, BaseProviderBorgModule, BaseXenoborgContraband ]
  id: XenoborgModuleLaser
  name: laser xenoborg module
  description: Module with a laser gun.
  components:
  - type: Sprite
    layers:
    - state: xenoborg_heavy
    - state: icon-xenoborg-laser
  - type: ItemBorgModule
    hands:
    - item: XenoborgLaserGun
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: xenoborg-laser-module }

- type: entity
  parent: [ BaseXenoborgModuleHeavy, BaseProviderBorgModule, BaseXenoborgContraband ]
  id: XenoborgModuleHeavyLaser
  name: heavy laser xenoborg module
  description: Module with a heavy laser gun.
  components:
  - type: Sprite
    layers:
    - state: xenoborg_heavy
    - state: icon-xenoborg-laser2
  - type: ItemBorgModule
    hands:
    - item: XenoborgHeavyLaserGun
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: xenoborg-laser2-module }

- type: entity
  parent: [ BaseXenoborgModuleScout, BaseProviderBorgModule, BaseXenoborgContraband ]
  id: XenoborgModuleSpaceMovement
  name: space movement xenoborg module
  description: Module that helps a Xenoborg move better in space.
  components:
  - type: Sprite
    layers:
    - state: xenoborg_scout
    - state: icon-xenoborg-space-movement
  - type: ItemBorgModule
    hands:
    - item: HandheldGPSBasic
    - item: HandHeldMassScannerBorg
    - item: HandheldStationMapUnpowered
    - item: WeaponGrapplingGun
    - item: JetpackXenoborg
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: xenoborg-space-movement-module }

- type: entity
  parent: [ BaseXenoborgModuleScout, BaseProviderBorgModule, BaseXenoborgContraband ]
  id: XenoborgModuleSword
  name: sword xenoborg module
  description: Module with a kukri knife.
  components:
  - type: Sprite
    layers:
    - state: xenoborg_scout
    - state: icon-xenoborg-sword
  - type: ItemBorgModule
    hands:
    - item: KukriKnife
    - item: JetpackXenoborg
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: xenoborg-sword-module }

- type: entity
  parent: [ BaseXenoborgModuleScout, BaseProviderBorgModule, BaseXenoborgContraband ]
  id: XenoborgModuleEnergySword
  name: energy sword xenoborg module
  description: Module with an energy dagger.
  components:
  - type: Sprite
    layers:
    - state: xenoborg_scout
    - state: icon-xenoborg-sword2
  - type: ItemBorgModule
    hands:
    - item: EnergyDaggerLoudBlue
    - item: JetpackXenoborg
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: xenoborg-sword2-module }

- type: entity
  parent: [ BaseXenoborgModuleStealth, BaseProviderBorgModule, BaseXenoborgContraband ]
  id: XenoborgModuleHypo
  name: nocturine hypo xenoborg module
  description: Module with a self-refilling nocturine hypo.
  components:
  - type: Sprite
    layers:
    - state: xenoborg_stealth
    - state: icon-xenoborg-hypo
  - type: ItemBorgModule
    hands:
    - item: NocturineHypo
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: xenoborg-hypo-module }

- type: entity
  parent: [ BaseXenoborgModuleStealth, BaseProviderBorgModule, BaseXenoborgContraband ]
  id: XenoborgModuleChameleonProjector
  name: chameleon projector xenoborg module
  description: Module with a chameleon projector.
  components:
  - type: Sprite
    layers:
    - state: xenoborg_stealth
    - state: icon-xenoborg-projector
  - type: ItemBorgModule
    hands:
    - item: ChameleonProjector
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: xenoborg-projector-module }

- type: entity
  parent: [ BaseXenoborgModuleStealth, BaseProviderBorgModule, BaseXenoborgContraband ]
  id: XenoborgModuleCloakDevice
  name: cloaking device xenoborg module
  description: Module with a device that allows xenoborgs to become invisible for some time.
  components:
  - type: Sprite
    layers:
    - state: xenoborg_stealth
    - state: icon-xenoborg-cloak
  - type: ItemBorgModule
    hands:
    - item: CloakingDevice
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: xenoborg-eye-module }

- type: entity
  parent: [ BaseXenoborgModuleStealth, BaseProviderBorgModule, BaseXenoborgContraband ]
  id: XenoborgModuleSuperCloakDevice
  name: cloaking device xenoborg module
  description: Module with a device that allows xenoborgs to become truly invisible for less time.
  components:
  - type: Sprite
    layers:
    - state: xenoborg_stealth
    - state: icon-xenoborg-cloak2
  - type: ItemBorgModule
    hands:
    - item: SuperCloakingDevice
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: xenoborg-eye2-module }
